{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lamtm\\\\Downloads\\\\cracklist-web\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\n// src/components/Game.js\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { doc, updateDoc, getDoc, collection, onSnapshot, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  gameCode,\n  pseudo\n}) {\n  _s();\n  const [cartes, setCartes] = useState([]);\n  const [joueurs, setJoueurs] = useState([]);\n  useEffect(() => {\n    if (!gameCode || !pseudo) return;\n    const gameRef = doc(db, 'games', gameCode);\n    const playerRef = doc(db, 'games', gameCode, 'players', pseudo);\n    const playersCollectionRef = collection(db, 'games', gameCode, 'players');\n\n    // √âcoute les joueurs\n    const unsubscribePlayers = onSnapshot(playersCollectionRef, snapshot => {\n      const updatedJoueurs = snapshot.docs.map(doc => doc.data());\n      setJoueurs(updatedJoueurs);\n    });\n\n    // √âcoute les cartes du joueur\n    const unsubscribeCartes = onSnapshot(playerRef, docSnap => {\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        setCartes(data.cartes || []);\n      }\n    });\n    return () => {\n      unsubscribePlayers();\n      unsubscribeCartes();\n    };\n  }, [gameCode, pseudo]);\n  const jouerCarte = async carte => {\n    if (!gameCode || !pseudo) return;\n    const playerRef = doc(db, 'games', gameCode, 'players', pseudo);\n    const playerSnap = await getDoc(playerRef);\n    if (!playerSnap.exists()) return;\n    const playerData = playerSnap.data();\n    const newCartes = (playerData.cartes || []).filter(c => c !== carte);\n    await updateDoc(playerRef, {\n      cartes: newCartes\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83C\\uDFAF Partie : \", gameCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDCCF Tes cartes :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), cartes.map((c, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => jouerCarte(c),\n      children: c\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"L5S7AafXjNYdObIRzz5frW/pfZo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","db","doc","updateDoc","getDoc","collection","onSnapshot","setDoc","jsxDEV","_jsxDEV","Game","gameCode","pseudo","_s","cartes","setCartes","joueurs","setJoueurs","gameRef","playerRef","playersCollectionRef","unsubscribePlayers","snapshot","updatedJoueurs","docs","map","data","unsubscribeCartes","docSnap","exists","jouerCarte","carte","playerSnap","playerData","newCartes","filter","c","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","i","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lamtm/Downloads/cracklist-web/src/components/Game.js"],"sourcesContent":["// src/components/Game.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport {\r\n  doc,\r\n  updateDoc,\r\n  getDoc,\r\n  collection,\r\n  onSnapshot,\r\n  setDoc,\r\n} from 'firebase/firestore';\r\n\r\nfunction Game({ gameCode, pseudo }) {\r\n  const [cartes, setCartes] = useState([]);\r\n  const [joueurs, setJoueurs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!gameCode || !pseudo) return;\r\n\r\n    const gameRef = doc(db, 'games', gameCode);\r\n    const playerRef = doc(db, 'games', gameCode, 'players', pseudo);\r\n    const playersCollectionRef = collection(db, 'games', gameCode, 'players');\r\n\r\n    // √âcoute les joueurs\r\n    const unsubscribePlayers = onSnapshot(playersCollectionRef, (snapshot) => {\r\n      const updatedJoueurs = snapshot.docs.map((doc) => doc.data());\r\n      setJoueurs(updatedJoueurs);\r\n    });\r\n\r\n    // √âcoute les cartes du joueur\r\n    const unsubscribeCartes = onSnapshot(playerRef, (docSnap) => {\r\n      if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        setCartes(data.cartes || []);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribePlayers();\r\n      unsubscribeCartes();\r\n    };\r\n  }, [gameCode, pseudo]);\r\n\r\n  const jouerCarte = async (carte) => {\r\n    if (!gameCode || !pseudo) return;\r\n    const playerRef = doc(db, 'games', gameCode, 'players', pseudo);\r\n    const playerSnap = await getDoc(playerRef);\r\n    if (!playerSnap.exists()) return;\r\n\r\n    const playerData = playerSnap.data();\r\n    const newCartes = (playerData.cartes || []).filter((c) => c !== carte);\r\n    await updateDoc(playerRef, { cartes: newCartes });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>üéØ Partie : {gameCode}</h2>\r\n      <h3>üÉè Tes cartes :</h3>\r\n      {cartes.map((c, i) => (\r\n        <button key={i} onClick={() => jouerCarte(c)}>\r\n          {c}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}