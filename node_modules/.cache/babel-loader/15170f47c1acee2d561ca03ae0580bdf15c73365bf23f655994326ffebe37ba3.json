{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lamtm\\\\Downloads\\\\cracklist-web\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { doc, setDoc, getDoc, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THEMES_LIST = [\"Pr√©nom masculin\", \"Pr√©nom f√©minin\", \"Ville\", \"Pays\", \"Continent\", \"Animal\", \"Fruit\", \"L√©gume\", \"M√©tier\", \"Objet\", \"Couleur\", \"Sport\", \"Film\", \"S√©rie\", \"Chanson\", \"Marque\", \"Moyen de transport\", \"Instrument de musique\", \"Langue\", \"Livre\", \"Dessin anim√©\", \"Invention\", \"Monument\", \"Fleuve ou rivi√®re\", \"Oiseau\", \"Insecte\", \"Plante ou arbre\", \"Pi√®ce de la maison\", \"Partie du corps\", \"Alimentation\", \"Boisson\", \"Marque de v√™tements\", \"√âmotion\", \"Super-h√©ros\", \"Pok√©mon\", \"Pays qui commence par‚Ä¶\", \"Film de Disney\", \"Animal marin\", \"Animal de la savane\", \"Animal de compagnie\", \"Pays en Europe\", \"Pays en Afrique\", \"Ville fran√ßaise\", \"Ville am√©ricaine\", \"Objet √©lectronique\", \"Pays o√π il fait chaud\", \"Pays avec une mer\", \"Profession m√©dicale\", \"Marque de voiture\", \"√âquipe de foot\", \"Personnage de manga\", \"Jeu vid√©o\", \"Appli mobile\", \"Nom de famille courant\", \"Chiffre ou nombre\", \"Mot en anglais\", \"Mot en fran√ßais\", \"Signe du zodiaque\", \"Emoji connu\", \"Appareil √©lectrom√©nager\", \"Nom de star internationale\", \"Nom de star fran√ßaise\", \"Personnage historique\", \"Nom de dinosaure\", \"√âl√©ment chimique\", \"Forme g√©om√©trique\", \"Langue morte\", \"Pays commen√ßant par une voyelle\", \"Mot avec 3 lettres\", \"Mot avec 5 lettres\", \"Animal volant\", \"Pays limitrophe de la France\", \"Ville avec une plage\", \"M√©tier en rapport avec l'√©cole\", \"M√©tier en rapport avec la police\", \"M√©tier en rapport avec les animaux\", \"M√©tier qu'on voit √† la t√©l√©\", \"Chanson connue\", \"Groupe de musique\", \"Chiffre impair\", \"Couleur primaire\", \"Style musical\", \"Accessoire de mode\", \"Pays ayant gagn√© la Coupe du Monde\", \"Mot finissant par -ette\", \"Mot finissant par -oir\", \"Mot qui rime avec \\\"chat\\\"\", \"Mot qui rime avec \\\"on\\\"\"];\nconst LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\nconst LETTER_PENALTIES = {\n  'A': 0,\n  'B': 0,\n  'C': 0,\n  'D': 0,\n  'F': 0,\n  'G': 0,\n  'L': 0,\n  'M': 0,\n  'N': 0,\n  'P': 0,\n  'R': 0,\n  'S': 0,\n  'T': 0,\n  'V': 0,\n  'E': 1,\n  'I': 1,\n  'J': 1,\n  'O': 1,\n  'H': 2,\n  'K': 2,\n  'U': 2,\n  'Y': 2,\n  'Q': 3,\n  'W': 3,\n  'X': 3,\n  'Z': 3\n};\nfunction generateCards() {\n  const cards = [];\n\n  // 8 cartes lettres al√©atoires\n  for (let i = 0; i < 5; i++) {\n    cards.push({\n      type: 'letter',\n      letter: LETTERS[Math.floor(Math.random() * LETTERS.length)],\n      id: `letter_${i}_${Date.now()}`\n    });\n  }\n\n  // 1 joker\n  cards.push({\n    type: 'joker',\n    id: `joker_${Date.now()}`\n  });\n\n  // 1 carte sp√©ciale al√©atoire\n  const specialCards = ['reverse', 'swap', 'stop'];\n  cards.push({\n    type: specialCards[Math.floor(Math.random() * specialCards.length)],\n    id: `special_${Date.now()}`\n  });\n\n  // 1 carte Crakitoko avec 3 th√®mes al√©atoires\n  const shuffledThemes = [...THEMES_LIST].sort(() => 0.5 - Math.random());\n  cards.push({\n    type: 'crakitoko',\n    themes: shuffledThemes.slice(0, 3),\n    id: `crakitoko_${Date.now()}`\n  });\n  return cards;\n}\nfunction generateRoomCode() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\nfunction Home({\n  onJoinRoom\n}) {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [joinCode, setJoinCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const createRoom = async () => {\n    if (!playerName.trim()) {\n      setError('Veuillez entrer votre pseudo');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const roomCode = generateRoomCode();\n      const playerId = `player_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n      console.log('üèóÔ∏è Cr√©ation de la room:', roomCode);\n      console.log('üë§ ID du joueur h√¥te:', playerId);\n      const hostPlayer = {\n        id: playerId,\n        name: playerName,\n        isHost: true,\n        cards: generateCards(),\n        connected: true,\n        lastSeen: Date.now()\n      };\n      console.log('üëë Joueur h√¥te cr√©√©:', hostPlayer);\n      const roomData = {\n        code: roomCode,\n        players: [hostPlayer],\n        // Assurer que c'est un tableau\n        gameStarted: false,\n        currentTheme: '',\n        currentPlayerIndex: 0,\n        direction: 1,\n        deck: generateDeck(),\n        themesList: THEMES_LIST,\n        createdAt: Date.now()\n      };\n      console.log('üè† Structure room compl√®te:', roomData);\n      await setDoc(doc(db, 'rooms', roomCode), roomData);\n      console.log('‚úÖ Room cr√©√©e avec succ√®s');\n      onJoinRoom(roomCode, playerName, playerId);\n    } catch (err) {\n      console.error('üí• Erreur cr√©ation room:', err);\n      setError(`Erreur lors de la cr√©ation de la salle: ${err.message}`);\n    }\n    setLoading(false);\n  };\n  const joinRoom = async () => {\n    if (!playerName.trim() || !joinCode.trim()) {\n      setError('Veuillez remplir tous les champs');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      console.log('üîç Tentative de connexion √† la room:', joinCode.toUpperCase());\n      const roomRef = doc(db, 'rooms', joinCode.toUpperCase());\n      console.log('üìÑ R√©f√©rence room cr√©√©e');\n      const roomDoc = await getDoc(roomRef);\n      console.log('üìã Document r√©cup√©r√©, existe:', roomDoc.exists());\n      if (!roomDoc.exists()) {\n        console.log('‚ùå Room introuvable');\n        setError('Code de salle invalide');\n        setLoading(false);\n        return;\n      }\n      const roomData = roomDoc.data();\n      console.log('üìä Donn√©es room:', roomData);\n      if (!roomData.players || !Array.isArray(roomData.players)) {\n        console.log('‚ùå Pas de tableau players');\n        setError('Erreur: structure de room invalide');\n        setLoading(false);\n        return;\n      }\n      if (roomData.players.length >= 10) {\n        console.log('‚ùå Room pleine');\n        setError('La salle est pleine (10 joueurs max)');\n        setLoading(false);\n        return;\n      }\n\n      // V√©rifier si le joueur essaie de se reconnecter\n      const existingPlayer = roomData.players.find(p => p.name === playerName);\n      console.log('üîÑ Joueur existant:', existingPlayer);\n      if (existingPlayer) {\n        // Reconnexion\n        console.log('üîÑ Reconnexion du joueur');\n        const playerIndex = roomData.players.findIndex(p => p.id === existingPlayer.id);\n        await updateDoc(roomRef, {\n          [`players.${playerIndex}.connected`]: true,\n          [`players.${playerIndex}.lastSeen`]: Date.now()\n        });\n        console.log('‚úÖ Reconnexion r√©ussie');\n        onJoinRoom(joinCode.toUpperCase(), playerName, existingPlayer.id);\n      } else {\n        // Nouveau joueur\n        console.log('‚ûï Nouveau joueur');\n        const playerId = `player_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n        const newPlayer = {\n          id: playerId,\n          name: playerName,\n          isHost: false,\n          cards: generateCards(),\n          connected: true,\n          lastSeen: Date.now()\n        };\n        console.log('üë§ Nouveau joueur cr√©√©:', newPlayer);\n        await updateDoc(roomRef, {\n          players: arrayUnion(newPlayer)\n        });\n        console.log('‚úÖ Joueur ajout√© √† la room');\n        onJoinRoom(joinCode.toUpperCase(), playerName, playerId);\n      }\n    } catch (err) {\n      console.error('üí• Erreur compl√®te:', err);\n      console.error('üí• Erreur message:', err.message);\n      console.error('üí• Erreur code:', err.code);\n      setError(`Erreur lors de la connexion √† la salle: ${err.message}`);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"game-title\",\n        children: \"\\uD83C\\uDFAE Crakitoko\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Votre pseudo\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          className: \"input-field\",\n          maxLength: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createRoom,\n          disabled: loading,\n          className: \"btn btn-primary\",\n          children: loading ? 'Cr√©ation...' : 'Cr√©er une salle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\",\n          children: \"ou\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Code de la salle\",\n          value: joinCode,\n          onChange: e => setJoinCode(e.target.value.toUpperCase()),\n          className: \"input-field\",\n          maxLength: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinRoom,\n          disabled: loading,\n          className: \"btn btn-secondary\",\n          children: loading ? 'Connexion...' : 'Rejoindre la salle'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-rules\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDFAF R\\xE8gles du jeu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Trouvez des mots commen\\xE7ant par la lettre de votre carte selon le th\\xE8me donn\\xE9 !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"CdSjXKv8yUSaJsree7gRYfQe44g=\");\n_c = Home;\nfunction generateDeck() {\n  const deck = [];\n\n  // G√©n√©rer plusieurs cartes de chaque type pour la pioche\n  for (let i = 0; i < 50; i++) {\n    deck.push({\n      type: 'letter',\n      letter: LETTERS[Math.floor(Math.random() * LETTERS.length)],\n      id: `deck_letter_${i}_${Date.now()}`\n    });\n  }\n  for (let i = 0; i < 10; i++) {\n    deck.push({\n      type: 'joker',\n      id: `deck_joker_${i}_${Date.now()}`\n    });\n  }\n  for (let i = 0; i < 15; i++) {\n    const specialCards = ['reverse', 'swap', 'stop'];\n    deck.push({\n      type: specialCards[Math.floor(Math.random() * specialCards.length)],\n      id: `deck_special_${i}_${Date.now()}`\n    });\n  }\n  for (let i = 0; i < 20; i++) {\n    const shuffledThemes = [...THEMES_LIST].sort(() => 0.5 - Math.random());\n    deck.push({\n      type: 'crakitoko',\n      themes: shuffledThemes.slice(0, 3),\n      id: `deck_crakitoko_${i}_${Date.now()}`\n    });\n  }\n  return deck.sort(() => 0.5 - Math.random());\n}\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","doc","setDoc","getDoc","updateDoc","arrayUnion","db","jsxDEV","_jsxDEV","THEMES_LIST","LETTERS","LETTER_PENALTIES","generateCards","cards","i","push","type","letter","Math","floor","random","length","id","Date","now","specialCards","shuffledThemes","sort","themes","slice","generateRoomCode","toString","substring","toUpperCase","Home","onJoinRoom","_s","playerName","setPlayerName","joinCode","setJoinCode","loading","setLoading","error","setError","createRoom","trim","roomCode","playerId","console","log","hostPlayer","name","isHost","connected","lastSeen","roomData","code","players","gameStarted","currentTheme","currentPlayerIndex","direction","deck","generateDeck","themesList","createdAt","err","message","joinRoom","roomRef","roomDoc","exists","data","Array","isArray","existingPlayer","find","p","playerIndex","findIndex","newPlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","maxLength","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lamtm/Downloads/cracklist-web/src/components/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { doc, setDoc, getDoc, updateDoc, arrayUnion } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst THEMES_LIST = [\r\n  \"Pr√©nom masculin\", \"Pr√©nom f√©minin\", \"Ville\", \"Pays\", \"Continent\", \"Animal\", \r\n  \"Fruit\", \"L√©gume\", \"M√©tier\", \"Objet\", \"Couleur\", \"Sport\", \"Film\", \"S√©rie\", \r\n  \"Chanson\", \"Marque\", \"Moyen de transport\", \"Instrument de musique\", \"Langue\", \r\n  \"Livre\", \"Dessin anim√©\", \"Invention\", \"Monument\", \"Fleuve ou rivi√®re\", \"Oiseau\", \r\n  \"Insecte\", \"Plante ou arbre\", \"Pi√®ce de la maison\", \"Partie du corps\", \r\n  \"Alimentation\", \"Boisson\", \"Marque de v√™tements\", \"√âmotion\", \"Super-h√©ros\", \r\n  \"Pok√©mon\", \"Pays qui commence par‚Ä¶\", \"Film de Disney\", \"Animal marin\", \r\n  \"Animal de la savane\", \"Animal de compagnie\", \"Pays en Europe\", \"Pays en Afrique\", \r\n  \"Ville fran√ßaise\", \"Ville am√©ricaine\", \"Objet √©lectronique\", \"Pays o√π il fait chaud\", \r\n  \"Pays avec une mer\", \"Profession m√©dicale\", \"Marque de voiture\", \"√âquipe de foot\", \r\n  \"Personnage de manga\", \"Jeu vid√©o\", \"Appli mobile\", \"Nom de famille courant\", \r\n  \"Chiffre ou nombre\", \"Mot en anglais\", \"Mot en fran√ßais\", \"Signe du zodiaque\", \r\n  \"Emoji connu\", \"Appareil √©lectrom√©nager\", \"Nom de star internationale\", \r\n  \"Nom de star fran√ßaise\", \"Personnage historique\", \"Nom de dinosaure\", \r\n  \"√âl√©ment chimique\", \"Forme g√©om√©trique\", \"Langue morte\", \r\n  \"Pays commen√ßant par une voyelle\", \"Mot avec 3 lettres\", \"Mot avec 5 lettres\", \r\n  \"Animal volant\", \"Pays limitrophe de la France\", \"Ville avec une plage\", \r\n  \"M√©tier en rapport avec l'√©cole\", \"M√©tier en rapport avec la police\", \r\n  \"M√©tier en rapport avec les animaux\", \"M√©tier qu'on voit √† la t√©l√©\", \r\n  \"Chanson connue\", \"Groupe de musique\", \"Chiffre impair\", \"Couleur primaire\", \r\n  \"Style musical\", \"Accessoire de mode\", \"Pays ayant gagn√© la Coupe du Monde\", \r\n  \"Mot finissant par -ette\", \"Mot finissant par -oir\", \"Mot qui rime avec \\\"chat\\\"\", \r\n  \"Mot qui rime avec \\\"on\\\"\"\r\n];\r\n\r\nconst LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\nconst LETTER_PENALTIES = {\r\n  'A': 0, 'B': 0, 'C': 0, 'D': 0, 'F': 0, 'G': 0, 'L': 0, 'M': 0, 'N': 0, 'P': 0, 'R': 0, 'S': 0, 'T': 0, 'V': 0,\r\n  'E': 1, 'I': 1, 'J': 1, 'O': 1,\r\n  'H': 2, 'K': 2, 'U': 2, 'Y': 2,\r\n  'Q': 3, 'W': 3, 'X': 3, 'Z': 3\r\n};\r\n\r\nfunction generateCards() {\r\n  const cards = [];\r\n  \r\n  // 8 cartes lettres al√©atoires\r\n  for (let i = 0; i < 5; i++) {\r\n    cards.push({\r\n      type: 'letter',\r\n      letter: LETTERS[Math.floor(Math.random() * LETTERS.length)],\r\n      id: `letter_${i}_${Date.now()}`\r\n    });\r\n  }\r\n  \r\n  // 1 joker\r\n  cards.push({\r\n    type: 'joker',\r\n    id: `joker_${Date.now()}`\r\n  });\r\n  \r\n  // 1 carte sp√©ciale al√©atoire\r\n  const specialCards = ['reverse', 'swap', 'stop'];\r\n  cards.push({\r\n    type: specialCards[Math.floor(Math.random() * specialCards.length)],\r\n    id: `special_${Date.now()}`\r\n  });\r\n  \r\n  // 1 carte Crakitoko avec 3 th√®mes al√©atoires\r\n  const shuffledThemes = [...THEMES_LIST].sort(() => 0.5 - Math.random());\r\n  cards.push({\r\n    type: 'crakitoko',\r\n    themes: shuffledThemes.slice(0, 3),\r\n    id: `crakitoko_${Date.now()}`\r\n  });\r\n  \r\n  return cards;\r\n}\r\n\r\nfunction generateRoomCode() {\r\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\r\n}\r\n\r\nfunction Home({ onJoinRoom }) {\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [joinCode, setJoinCode] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const createRoom = async () => {\r\n    if (!playerName.trim()) {\r\n      setError('Veuillez entrer votre pseudo');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const roomCode = generateRoomCode();\r\n      const playerId = `player_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\r\n      \r\n      console.log('üèóÔ∏è Cr√©ation de la room:', roomCode);\r\n      console.log('üë§ ID du joueur h√¥te:', playerId);\r\n      \r\n      const hostPlayer = {\r\n        id: playerId,\r\n        name: playerName,\r\n        isHost: true,\r\n        cards: generateCards(),\r\n        connected: true,\r\n        lastSeen: Date.now()\r\n      };\r\n      \r\n      console.log('üëë Joueur h√¥te cr√©√©:', hostPlayer);\r\n      \r\n      const roomData = {\r\n        code: roomCode,\r\n        players: [hostPlayer], // Assurer que c'est un tableau\r\n        gameStarted: false,\r\n        currentTheme: '',\r\n        currentPlayerIndex: 0,\r\n        direction: 1,\r\n        deck: generateDeck(),\r\n        themesList: THEMES_LIST,\r\n        createdAt: Date.now()\r\n      };\r\n\r\n      console.log('üè† Structure room compl√®te:', roomData);\r\n      \r\n      await setDoc(doc(db, 'rooms', roomCode), roomData);\r\n      console.log('‚úÖ Room cr√©√©e avec succ√®s');\r\n      \r\n      onJoinRoom(roomCode, playerName, playerId);\r\n    } catch (err) {\r\n      console.error('üí• Erreur cr√©ation room:', err);\r\n      setError(`Erreur lors de la cr√©ation de la salle: ${err.message}`);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const joinRoom = async () => {\r\n    if (!playerName.trim() || !joinCode.trim()) {\r\n      setError('Veuillez remplir tous les champs');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      console.log('üîç Tentative de connexion √† la room:', joinCode.toUpperCase());\r\n      const roomRef = doc(db, 'rooms', joinCode.toUpperCase());\r\n      console.log('üìÑ R√©f√©rence room cr√©√©e');\r\n      \r\n      const roomDoc = await getDoc(roomRef);\r\n      console.log('üìã Document r√©cup√©r√©, existe:', roomDoc.exists());\r\n\r\n      if (!roomDoc.exists()) {\r\n        console.log('‚ùå Room introuvable');\r\n        setError('Code de salle invalide');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const roomData = roomDoc.data();\r\n      console.log('üìä Donn√©es room:', roomData);\r\n      \r\n      if (!roomData.players || !Array.isArray(roomData.players)) {\r\n        console.log('‚ùå Pas de tableau players');\r\n        setError('Erreur: structure de room invalide');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      if (roomData.players.length >= 10) {\r\n        console.log('‚ùå Room pleine');\r\n        setError('La salle est pleine (10 joueurs max)');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // V√©rifier si le joueur essaie de se reconnecter\r\n      const existingPlayer = roomData.players.find(p => p.name === playerName);\r\n      console.log('üîÑ Joueur existant:', existingPlayer);\r\n      \r\n      if (existingPlayer) {\r\n        // Reconnexion\r\n        console.log('üîÑ Reconnexion du joueur');\r\n        const playerIndex = roomData.players.findIndex(p => p.id === existingPlayer.id);\r\n        await updateDoc(roomRef, {\r\n          [`players.${playerIndex}.connected`]: true,\r\n          [`players.${playerIndex}.lastSeen`]: Date.now()\r\n        });\r\n        console.log('‚úÖ Reconnexion r√©ussie');\r\n        onJoinRoom(joinCode.toUpperCase(), playerName, existingPlayer.id);\r\n      } else {\r\n        // Nouveau joueur\r\n        console.log('‚ûï Nouveau joueur');\r\n        const playerId = `player_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\r\n        const newPlayer = {\r\n          id: playerId,\r\n          name: playerName,\r\n          isHost: false,\r\n          cards: generateCards(),\r\n          connected: true,\r\n          lastSeen: Date.now()\r\n        };\r\n\r\n        console.log('üë§ Nouveau joueur cr√©√©:', newPlayer);\r\n        await updateDoc(roomRef, {\r\n          players: arrayUnion(newPlayer)\r\n        });\r\n        console.log('‚úÖ Joueur ajout√© √† la room');\r\n        onJoinRoom(joinCode.toUpperCase(), playerName, playerId);\r\n      }\r\n    } catch (err) {\r\n      console.error('üí• Erreur compl√®te:', err);\r\n      console.error('üí• Erreur message:', err.message);\r\n      console.error('üí• Erreur code:', err.code);\r\n      setError(`Erreur lors de la connexion √† la salle: ${err.message}`);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home-container\">\r\n        <h1 className=\"game-title\">üéÆ Crakitoko</h1>\r\n        \r\n        <div className=\"form-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Votre pseudo\"\r\n            value={playerName}\r\n            onChange={(e) => setPlayerName(e.target.value)}\r\n            className=\"input-field\"\r\n            maxLength={20}\r\n          />\r\n          \r\n          <button \r\n            onClick={createRoom}\r\n            disabled={loading}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            {loading ? 'Cr√©ation...' : 'Cr√©er une salle'}\r\n          </button>\r\n          \r\n          <div className=\"separator\">ou</div>\r\n          \r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Code de la salle\"\r\n            value={joinCode}\r\n            onChange={(e) => setJoinCode(e.target.value.toUpperCase())}\r\n            className=\"input-field\"\r\n            maxLength={6}\r\n          />\r\n          \r\n          <button \r\n            onClick={joinRoom}\r\n            disabled={loading}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            {loading ? 'Connexion...' : 'Rejoindre la salle'}\r\n          </button>\r\n          \r\n          {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n        \r\n        <div className=\"game-rules\">\r\n          <h3>üéØ R√®gles du jeu</h3>\r\n          <p>Trouvez des mots commen√ßant par la lettre de votre carte selon le th√®me donn√© !</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction generateDeck() {\r\n  const deck = [];\r\n  \r\n  // G√©n√©rer plusieurs cartes de chaque type pour la pioche\r\n  for (let i = 0; i < 50; i++) {\r\n    deck.push({\r\n      type: 'letter',\r\n      letter: LETTERS[Math.floor(Math.random() * LETTERS.length)],\r\n      id: `deck_letter_${i}_${Date.now()}`\r\n    });\r\n  }\r\n  \r\n  for (let i = 0; i < 10; i++) {\r\n    deck.push({\r\n      type: 'joker',\r\n      id: `deck_joker_${i}_${Date.now()}`\r\n    });\r\n  }\r\n  \r\n  for (let i = 0; i < 15; i++) {\r\n    const specialCards = ['reverse', 'swap', 'stop'];\r\n    deck.push({\r\n      type: specialCards[Math.floor(Math.random() * specialCards.length)],\r\n      id: `deck_special_${i}_${Date.now()}`\r\n    });\r\n  }\r\n  \r\n  for (let i = 0; i < 20; i++) {\r\n    const shuffledThemes = [...THEMES_LIST].sort(() => 0.5 - Math.random());\r\n    deck.push({\r\n      type: 'crakitoko',\r\n      themes: shuffledThemes.slice(0, 3),\r\n      id: `deck_crakitoko_${i}_${Date.now()}`\r\n    });\r\n  }\r\n  \r\n  return deck.sort(() => 0.5 - Math.random());\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}