{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lamtm\\\\Downloads\\\\cracklist-web\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { doc, getDoc, onSnapshot, updateDoc, arrayRemove, arrayUnion } from 'firebase/firestore';\nimport VotePanel from './VotePanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  gameCode,\n  pseudo\n}) {\n  _s();\n  const [cartes, setCartes] = useState([]);\n  const [joueurActif, setJoueurActif] = useState(null);\n  const [piocheRestante, setPiocheRestante] = useState(0);\n  const [timer, setTimer] = useState(15);\n  const [monTour, setMonTour] = useState(false);\n  const [jokerLetter, setJokerLetter] = useState('');\n  const [showVote, setShowVote] = useState(false);\n  useEffect(() => {\n    const playerRef = doc(db, \"games\", gameCode, \"players\", pseudo);\n    const unsubPlayer = onSnapshot(playerRef, docSnap => {\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        if (data.cartes) setCartes(data.cartes);\n      }\n    });\n    const gameRef = doc(db, \"games\", gameCode);\n    const unsubGame = onSnapshot(gameRef, docSnap => {\n      if (docSnap.exists()) {\n        var _data$pioche;\n        const data = docSnap.data();\n        setJoueurActif(data.currentPlayer);\n        setPiocheRestante(((_data$pioche = data.pioche) === null || _data$pioche === void 0 ? void 0 : _data$pioche.length) || 0);\n        setMonTour(data.currentPlayer === pseudo);\n        setTimer(15);\n      }\n    });\n    return () => {\n      unsubPlayer();\n      unsubGame();\n    };\n  }, [gameCode, pseudo]);\n  useEffect(() => {\n    if (!monTour) return;\n    if (timer === 0) {\n      handleTimeout();\n      return;\n    }\n    const interval = setInterval(() => setTimer(prev => prev - 1), 1000);\n    return () => clearInterval(interval);\n  }, [monTour, timer]);\n  const handleTimeout = async () => {\n    const gameRef = doc(db, \"games\", gameCode);\n    const snap = await getDoc(gameRef);\n    const gameData = snap.data();\n    const pioche = gameData.pioche || [];\n    const nextCard = pioche[0];\n    const newPioche = pioche.slice(1);\n    await updateDoc(doc(db, \"games\", gameCode, \"players\", pseudo), {\n      cartes: arrayUnion(nextCard)\n    });\n    await updateDoc(gameRef, {\n      pioche: newPioche,\n      currentPlayer: getNextPlayer(gameData, pseudo)\n    });\n  };\n  const getNextPlayer = (gameData, current) => {\n    const sens = gameData.sens || 1;\n    const players = Object.keys(gameData.players || {});\n    const index = players.indexOf(current);\n    const nextIndex = (index + sens + players.length) % players.length;\n    return players[nextIndex];\n  };\n  const difficultyScore = letter => {\n    const easy = \"AEIOTNRSLU\";\n    const medium = \"BCDFGHJKMP\";\n    const hard = \"QVWXYZ\";\n    if (easy.includes(letter)) return 0;\n    if (medium.includes(letter)) return 1;\n    if (hard.includes(letter)) return 2;\n    return 3;\n  };\n  const handlePlayCard = async card => {\n    if (card.startsWith(\"joker\")) {\n      const l = prompt(\"Quelle lettre commence ton mot ?\");\n      if (!l || l.length !== 1) return alert(\"Lettre invalide.\");\n      const lettre = l.toUpperCase();\n      const penalty = difficultyScore(lettre);\n      const gameRef = doc(db, \"games\", gameCode);\n      const snap = await getDoc(gameRef);\n      const gameData = snap.data();\n      const pioche = gameData.pioche || [];\n      const target = getNextPlayer(gameData, pseudo);\n      const toGive = pioche.slice(0, penalty);\n      const newPioche = pioche.slice(penalty);\n      await updateDoc(doc(db, \"games\", gameCode, \"players\", pseudo), {\n        cartes: arrayRemove(card)\n      });\n      await updateDoc(doc(db, \"games\", gameCode, \"players\", target), {\n        cartes: arrayUnion(...toGive)\n      });\n      await updateDoc(gameRef, {\n        pioche: newPioche,\n        currentPlayer: target\n      });\n    } else {\n      const gameRef = doc(db, \"games\", gameCode);\n      const snap = await getDoc(gameRef);\n      const gameData = snap.data();\n      await updateDoc(doc(db, \"games\", gameCode, \"players\", pseudo), {\n        cartes: arrayRemove(card)\n      });\n      await updateDoc(gameRef, {\n        currentPlayer: getNextPlayer(gameData, pseudo)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83C\\uDFAE Partie : \", gameCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu es : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: pseudo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Joueur actif : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: joueurActif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Mon tour : \", monTour ? \"✅ OUI\" : \"❌ NON\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), monTour && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u23F3 Temps restant : \", timer, \" s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDCCF Tes cartes :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: cartes.map((carte, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => monTour && handlePlayCard(carte),\n        style: {\n          margin: 5,\n          padding: 10,\n          backgroundColor: monTour ? '#d0f0c0' : '#eee',\n          cursor: monTour ? 'pointer' : 'default'\n        },\n        children: carte\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), showVote && /*#__PURE__*/_jsxDEV(VotePanel, {\n      onVote: v => alert(v ? \"✔️ Validé\" : \"❌ Refusé\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"UMN/H9RKQrQcH7UJOQ1ldzHpbSE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","db","doc","getDoc","onSnapshot","updateDoc","arrayRemove","arrayUnion","VotePanel","jsxDEV","_jsxDEV","Game","gameCode","pseudo","_s","cartes","setCartes","joueurActif","setJoueurActif","piocheRestante","setPiocheRestante","timer","setTimer","monTour","setMonTour","jokerLetter","setJokerLetter","showVote","setShowVote","playerRef","unsubPlayer","docSnap","exists","data","gameRef","unsubGame","_data$pioche","currentPlayer","pioche","length","handleTimeout","interval","setInterval","prev","clearInterval","snap","gameData","nextCard","newPioche","slice","getNextPlayer","current","sens","players","Object","keys","index","indexOf","nextIndex","difficultyScore","letter","easy","medium","hard","includes","handlePlayCard","card","startsWith","l","prompt","alert","lettre","toUpperCase","penalty","target","toGive","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","map","carte","i","onClick","margin","backgroundColor","cursor","onVote","v","_c","$RefreshReg$"],"sources":["C:/Users/lamtm/Downloads/cracklist-web/src/components/Game.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  updateDoc,\r\n  arrayRemove,\r\n  arrayUnion\r\n} from 'firebase/firestore';\r\n\r\nimport VotePanel from './VotePanel';\r\n\r\nfunction Game({ gameCode, pseudo }) {\r\n  const [cartes, setCartes] = useState([]);\r\n  const [joueurActif, setJoueurActif] = useState(null);\r\n  const [piocheRestante, setPiocheRestante] = useState(0);\r\n  const [timer, setTimer] = useState(15);\r\n  const [monTour, setMonTour] = useState(false);\r\n  const [jokerLetter, setJokerLetter] = useState('');\r\n  const [showVote, setShowVote] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const playerRef = doc(db, \"games\", gameCode, \"players\", pseudo);\r\n    const unsubPlayer = onSnapshot(playerRef, (docSnap) => {\r\n      if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        if (data.cartes) setCartes(data.cartes);\r\n      }\r\n    });\r\n\r\n    const gameRef = doc(db, \"games\", gameCode);\r\n    const unsubGame = onSnapshot(gameRef, (docSnap) => {\r\n      if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        setJoueurActif(data.currentPlayer);\r\n        setPiocheRestante(data.pioche?.length || 0);\r\n        setMonTour(data.currentPlayer === pseudo);\r\n        setTimer(15);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubPlayer();\r\n      unsubGame();\r\n    };\r\n  }, [gameCode, pseudo]);\r\n\r\n  useEffect(() => {\r\n    if (!monTour) return;\r\n    if (timer === 0) {\r\n      handleTimeout();\r\n      return;\r\n    }\r\n    const interval = setInterval(() => setTimer((prev) => prev - 1), 1000);\r\n    return () => clearInterval(interval);\r\n  }, [monTour, timer]);\r\n\r\n  const handleTimeout = async () => {\r\n    const gameRef = doc(db, \"games\", gameCode);\r\n    const snap = await getDoc(gameRef);\r\n    const gameData = snap.data();\r\n\r\n    const pioche = gameData.pioche || [];\r\n    const nextCard = pioche[0];\r\n    const newPioche = pioche.slice(1);\r\n\r\n    await updateDoc(doc(db, \"games\", gameCode, \"players\", pseudo), {\r\n      cartes: arrayUnion(nextCard)\r\n    });\r\n\r\n    await updateDoc(gameRef, {\r\n      pioche: newPioche,\r\n      currentPlayer: getNextPlayer(gameData, pseudo)\r\n    });\r\n  };\r\n\r\n  const getNextPlayer = (gameData, current) => {\r\n    const sens = gameData.sens || 1;\r\n    const players = Object.keys(gameData.players || {});\r\n    const index = players.indexOf(current);\r\n    const nextIndex = (index + sens + players.length) % players.length;\r\n    return players[nextIndex];\r\n  };\r\n\r\n  const difficultyScore = (letter) => {\r\n    const easy = \"AEIOTNRSLU\";\r\n    const medium = \"BCDFGHJKMP\";\r\n    const hard = \"QVWXYZ\";\r\n    if (easy.includes(letter)) return 0;\r\n    if (medium.includes(letter)) return 1;\r\n    if (hard.includes(letter)) return 2;\r\n    return 3;\r\n  };\r\n\r\n  const handlePlayCard = async (card) => {\r\n    if (card.startsWith(\"joker\")) {\r\n      const l = prompt(\"Quelle lettre commence ton mot ?\");\r\n      if (!l || l.length !== 1) return alert(\"Lettre invalide.\");\r\n      const lettre = l.toUpperCase();\r\n      const penalty = difficultyScore(lettre);\r\n      const gameRef = doc(db, \"games\", gameCode);\r\n      const snap = await getDoc(gameRef);\r\n      const gameData = snap.data();\r\n      const pioche = gameData.pioche || [];\r\n      const target = getNextPlayer(gameData, pseudo);\r\n      const toGive = pioche.slice(0, penalty);\r\n      const newPioche = pioche.slice(penalty);\r\n\r\n      await updateDoc(doc(db, \"games\", gameCode, \"players\", pseudo), {\r\n        cartes: arrayRemove(card)\r\n      });\r\n\r\n      await updateDoc(doc(db, \"games\", gameCode, \"players\", target), {\r\n        cartes: arrayUnion(...toGive)\r\n      });\r\n\r\n      await updateDoc(gameRef, {\r\n        pioche: newPioche,\r\n        currentPlayer: target\r\n      });\r\n    } else {\r\n      const gameRef = doc(db, \"games\", gameCode);\r\n      const snap = await getDoc(gameRef);\r\n      const gameData = snap.data();\r\n      await updateDoc(doc(db, \"games\", gameCode, \"players\", pseudo), {\r\n        cartes: arrayRemove(card)\r\n      });\r\n      await updateDoc(gameRef, {\r\n        currentPlayer: getNextPlayer(gameData, pseudo)\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>🎮 Partie : {gameCode}</h2>\r\n      <p>Tu es : <strong>{pseudo}</strong></p>\r\n      <p>Joueur actif : <strong>{joueurActif}</strong></p>\r\n      <p>Mon tour : {monTour ? \"✅ OUI\" : \"❌ NON\"}</p>\r\n      {monTour && <p>⏳ Temps restant : {timer} s</p>}\r\n\r\n      <h3>🃏 Tes cartes :</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        {cartes.map((carte, i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => monTour && handlePlayCard(carte)}\r\n            style={{\r\n              margin: 5,\r\n              padding: 10,\r\n              backgroundColor: monTour ? '#d0f0c0' : '#eee',\r\n              cursor: monTour ? 'pointer' : 'default'\r\n            }}\r\n          >\r\n            {carte}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {showVote && <VotePanel onVote={(v) => alert(v ? \"✔️ Validé\" : \"❌ Refusé\")} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,aAAa;AAChC,SACEC,GAAG,EACHC,MAAM,EACNC,UAAU,EACVC,SAAS,EACTC,WAAW,EACXC,UAAU,QACL,oBAAoB;AAE3B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,IAAIA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAM8B,SAAS,GAAG3B,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,EAAE,SAAS,EAAEC,MAAM,CAAC;IAC/D,MAAMiB,WAAW,GAAG1B,UAAU,CAACyB,SAAS,EAAGE,OAAO,IAAK;MACrD,IAAIA,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QACpB,MAAMC,IAAI,GAAGF,OAAO,CAACE,IAAI,CAAC,CAAC;QAC3B,IAAIA,IAAI,CAAClB,MAAM,EAAEC,SAAS,CAACiB,IAAI,CAAClB,MAAM,CAAC;MACzC;IACF,CAAC,CAAC;IAEF,MAAMmB,OAAO,GAAGhC,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,CAAC;IAC1C,MAAMuB,SAAS,GAAG/B,UAAU,CAAC8B,OAAO,EAAGH,OAAO,IAAK;MACjD,IAAIA,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QAAA,IAAAI,YAAA;QACpB,MAAMH,IAAI,GAAGF,OAAO,CAACE,IAAI,CAAC,CAAC;QAC3Bf,cAAc,CAACe,IAAI,CAACI,aAAa,CAAC;QAClCjB,iBAAiB,CAAC,EAAAgB,YAAA,GAAAH,IAAI,CAACK,MAAM,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,MAAM,KAAI,CAAC,CAAC;QAC3Cf,UAAU,CAACS,IAAI,CAACI,aAAa,KAAKxB,MAAM,CAAC;QACzCS,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXQ,WAAW,CAAC,CAAC;MACbK,SAAS,CAAC,CAAC;IACb,CAAC;EACH,CAAC,EAAE,CAACvB,QAAQ,EAAEC,MAAM,CAAC,CAAC;EAEtBd,SAAS,CAAC,MAAM;IACd,IAAI,CAACwB,OAAO,EAAE;IACd,IAAIF,KAAK,KAAK,CAAC,EAAE;MACfmB,aAAa,CAAC,CAAC;MACf;IACF;IACA,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAMpB,QAAQ,CAAEqB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;IACtE,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAClB,OAAO,EAAEF,KAAK,CAAC,CAAC;EAEpB,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMN,OAAO,GAAGhC,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,CAAC;IAC1C,MAAMiC,IAAI,GAAG,MAAM1C,MAAM,CAAC+B,OAAO,CAAC;IAClC,MAAMY,QAAQ,GAAGD,IAAI,CAACZ,IAAI,CAAC,CAAC;IAE5B,MAAMK,MAAM,GAAGQ,QAAQ,CAACR,MAAM,IAAI,EAAE;IACpC,MAAMS,QAAQ,GAAGT,MAAM,CAAC,CAAC,CAAC;IAC1B,MAAMU,SAAS,GAAGV,MAAM,CAACW,KAAK,CAAC,CAAC,CAAC;IAEjC,MAAM5C,SAAS,CAACH,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,EAAE,SAAS,EAAEC,MAAM,CAAC,EAAE;MAC7DE,MAAM,EAAER,UAAU,CAACwC,QAAQ;IAC7B,CAAC,CAAC;IAEF,MAAM1C,SAAS,CAAC6B,OAAO,EAAE;MACvBI,MAAM,EAAEU,SAAS;MACjBX,aAAa,EAAEa,aAAa,CAACJ,QAAQ,EAAEjC,MAAM;IAC/C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMqC,aAAa,GAAGA,CAACJ,QAAQ,EAAEK,OAAO,KAAK;IAC3C,MAAMC,IAAI,GAAGN,QAAQ,CAACM,IAAI,IAAI,CAAC;IAC/B,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACT,QAAQ,CAACO,OAAO,IAAI,CAAC,CAAC,CAAC;IACnD,MAAMG,KAAK,GAAGH,OAAO,CAACI,OAAO,CAACN,OAAO,CAAC;IACtC,MAAMO,SAAS,GAAG,CAACF,KAAK,GAAGJ,IAAI,GAAGC,OAAO,CAACd,MAAM,IAAIc,OAAO,CAACd,MAAM;IAClE,OAAOc,OAAO,CAACK,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMC,eAAe,GAAIC,MAAM,IAAK;IAClC,MAAMC,IAAI,GAAG,YAAY;IACzB,MAAMC,MAAM,GAAG,YAAY;IAC3B,MAAMC,IAAI,GAAG,QAAQ;IACrB,IAAIF,IAAI,CAACG,QAAQ,CAACJ,MAAM,CAAC,EAAE,OAAO,CAAC;IACnC,IAAIE,MAAM,CAACE,QAAQ,CAACJ,MAAM,CAAC,EAAE,OAAO,CAAC;IACrC,IAAIG,IAAI,CAACC,QAAQ,CAACJ,MAAM,CAAC,EAAE,OAAO,CAAC;IACnC,OAAO,CAAC;EACV,CAAC;EAED,MAAMK,cAAc,GAAG,MAAOC,IAAI,IAAK;IACrC,IAAIA,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE;MAC5B,MAAMC,CAAC,GAAGC,MAAM,CAAC,kCAAkC,CAAC;MACpD,IAAI,CAACD,CAAC,IAAIA,CAAC,CAAC7B,MAAM,KAAK,CAAC,EAAE,OAAO+B,KAAK,CAAC,kBAAkB,CAAC;MAC1D,MAAMC,MAAM,GAAGH,CAAC,CAACI,WAAW,CAAC,CAAC;MAC9B,MAAMC,OAAO,GAAGd,eAAe,CAACY,MAAM,CAAC;MACvC,MAAMrC,OAAO,GAAGhC,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,CAAC;MAC1C,MAAMiC,IAAI,GAAG,MAAM1C,MAAM,CAAC+B,OAAO,CAAC;MAClC,MAAMY,QAAQ,GAAGD,IAAI,CAACZ,IAAI,CAAC,CAAC;MAC5B,MAAMK,MAAM,GAAGQ,QAAQ,CAACR,MAAM,IAAI,EAAE;MACpC,MAAMoC,MAAM,GAAGxB,aAAa,CAACJ,QAAQ,EAAEjC,MAAM,CAAC;MAC9C,MAAM8D,MAAM,GAAGrC,MAAM,CAACW,KAAK,CAAC,CAAC,EAAEwB,OAAO,CAAC;MACvC,MAAMzB,SAAS,GAAGV,MAAM,CAACW,KAAK,CAACwB,OAAO,CAAC;MAEvC,MAAMpE,SAAS,CAACH,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,EAAE,SAAS,EAAEC,MAAM,CAAC,EAAE;QAC7DE,MAAM,EAAET,WAAW,CAAC4D,IAAI;MAC1B,CAAC,CAAC;MAEF,MAAM7D,SAAS,CAACH,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,EAAE,SAAS,EAAE8D,MAAM,CAAC,EAAE;QAC7D3D,MAAM,EAAER,UAAU,CAAC,GAAGoE,MAAM;MAC9B,CAAC,CAAC;MAEF,MAAMtE,SAAS,CAAC6B,OAAO,EAAE;QACvBI,MAAM,EAAEU,SAAS;QACjBX,aAAa,EAAEqC;MACjB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,MAAMxC,OAAO,GAAGhC,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,CAAC;MAC1C,MAAMiC,IAAI,GAAG,MAAM1C,MAAM,CAAC+B,OAAO,CAAC;MAClC,MAAMY,QAAQ,GAAGD,IAAI,CAACZ,IAAI,CAAC,CAAC;MAC5B,MAAM5B,SAAS,CAACH,GAAG,CAACD,EAAE,EAAE,OAAO,EAAEW,QAAQ,EAAE,SAAS,EAAEC,MAAM,CAAC,EAAE;QAC7DE,MAAM,EAAET,WAAW,CAAC4D,IAAI;MAC1B,CAAC,CAAC;MACF,MAAM7D,SAAS,CAAC6B,OAAO,EAAE;QACvBG,aAAa,EAAEa,aAAa,CAACJ,QAAQ,EAAEjC,MAAM;MAC/C,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEH,OAAA;IAAKkE,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1BpE,OAAA;MAAAoE,QAAA,GAAI,wBAAY,EAAClE,QAAQ;IAAA;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BxE,OAAA;MAAAoE,QAAA,GAAG,UAAQ,eAAApE,OAAA;QAAAoE,QAAA,EAASjE;MAAM;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACxCxE,OAAA;MAAAoE,QAAA,GAAG,iBAAe,eAAApE,OAAA;QAAAoE,QAAA,EAAS7D;MAAW;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpDxE,OAAA;MAAAoE,QAAA,GAAG,aAAW,EAACvD,OAAO,GAAG,OAAO,GAAG,OAAO;IAAA;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9C3D,OAAO,iBAAIb,OAAA;MAAAoE,QAAA,GAAG,yBAAkB,EAACzD,KAAK,EAAC,IAAE;IAAA;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE9CxE,OAAA;MAAAoE,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxE,OAAA;MAAKkE,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAN,QAAA,EAC/C/D,MAAM,CAACsE,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACnB7E,OAAA;QAEE8E,OAAO,EAAEA,CAAA,KAAMjE,OAAO,IAAI0C,cAAc,CAACqB,KAAK,CAAE;QAChDV,KAAK,EAAE;UACLa,MAAM,EAAE,CAAC;UACTZ,OAAO,EAAE,EAAE;UACXa,eAAe,EAAEnE,OAAO,GAAG,SAAS,GAAG,MAAM;UAC7CoE,MAAM,EAAEpE,OAAO,GAAG,SAAS,GAAG;QAChC,CAAE;QAAAuD,QAAA,EAEDQ;MAAK,GATDC,CAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUA,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELvD,QAAQ,iBAAIjB,OAAA,CAACF,SAAS;MAACoF,MAAM,EAAGC,CAAC,IAAKvB,KAAK,CAACuB,CAAC,GAAG,WAAW,GAAG,UAAU;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV;AAACpE,EAAA,CAtJQH,IAAI;AAAAmF,EAAA,GAAJnF,IAAI;AAwJb,eAAeA,IAAI;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}