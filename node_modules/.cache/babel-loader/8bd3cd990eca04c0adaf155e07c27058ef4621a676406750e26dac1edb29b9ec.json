{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lamtm\\\\Downloads\\\\cracklist-web\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { doc, getDoc, onSnapshot, updateDoc, arrayRemove, arrayUnion, setDoc, deleteDoc, collection } from 'firebase/firestore';\nimport VotePanel from './VotePanel';\nimport ThemeSelector from './ThemeSelector';\nimport CurrentTheme from './CurrentTheme';\nimport WinnerPanel from './WinnerPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  gameCode,\n  pseudo\n}) {\n  _s();\n  const [cartes, setCartes] = useState([]);\n  const [joueurActif, setJoueurActif] = useState(null);\n  const [piocheRestante, setPiocheRestante] = useState(0);\n  const [timer, setTimer] = useState(15);\n  const [monTour, setMonTour] = useState(false);\n  const [votePhase, setVotePhase] = useState(false);\n  const [playedCard, setPlayedCard] = useState('');\n  const [themeActuel, setThemeActuel] = useState('');\n  const [choisirTheme, setChoisirTheme] = useState(false);\n  const [sens, setSens] = useState(1);\n  const [joueurs, setJoueurs] = useState([]);\n  const [fini, setFini] = useState(false);\n  useEffect(() => {\n    const unsubPlayers = onSnapshot(collection(db, \"games\", gameCode, \"players\"), snapshot => {\n      const data = [];\n      snapshot.forEach(doc => {\n        const d = doc.data();\n        data.push({\n          pseudo: doc.id,\n          cartes: d.cartes || [],\n          out: d.out\n        });\n        if (doc.id === pseudo) setCartes(d.cartes || []);\n      });\n      setJoueurs(data);\n    });\n    const unsubGame = onSnapshot(doc(db, \"games\", gameCode), docSnap => {\n      if (docSnap.exists()) {\n        var _data$pioche;\n        const data = docSnap.data();\n        setJoueurActif(data.currentPlayer);\n        setMonTour(data.currentPlayer === pseudo);\n        setPiocheRestante(((_data$pioche = data.pioche) === null || _data$pioche === void 0 ? void 0 : _data$pioche.length) || 0);\n        setThemeActuel(data.theme || '');\n        setSens(data.sens || 1);\n        setTimer(15);\n      }\n    });\n    return () => {\n      unsubPlayers();\n      unsubGame();\n    };\n  }, [gameCode, pseudo]);\n  useEffect(() => {\n    if (!monTour || votePhase || fini) return;\n    if (timer === 0) {\n      handleTimeout();\n      return;\n    }\n    const interval = setInterval(() => setTimer(t => t - 1), 1000);\n    return () => clearInterval(interval);\n  }, [monTour, timer, votePhase, fini]);\n  const getNextPlayer = (current, joueursActifs) => {\n    const list = joueursActifs.map(j => j.pseudo);\n    const index = list.indexOf(current);\n    const nextIndex = (index + sens + list.length) % list.length;\n    return list[nextIndex];\n  };\n  const handleTimeout = async () => {\n    const gameRef = doc(db, \"games\", gameCode);\n    const snap = await getDoc(gameRef);\n    const gameData = snap.data();\n    const pioche = gameData.pioche || [];\n    const nextCard = pioche[0];\n    const newPioche = pioche.slice(1);\n    const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\n    await updateDoc(doc(db, \"games\", gameCode, \"players\", pseudo), {\n      cartes: arrayUnion(nextCard)\n    });\n    await updateDoc(gameRef, {\n      pioche: newPioche,\n      currentPlayer: next\n    });\n  };\n  const difficultyScore = letter => {\n    const easy = 'AEIOTNRSLU';\n    const medium = 'BCDFGHJKMP';\n    const hard = 'QVWXYZ';\n    if (easy.includes(letter)) return 0;\n    if (medium.includes(letter)) return 1;\n    if (hard.includes(letter)) return 2;\n    return 3;\n  };\n  const startVote = async card => {\n    setPlayedCard(card);\n    setVotePhase(true);\n    setTimeout(() => countVotes(card), 5000);\n  };\n  const countVotes = async card => {\n    const voters = joueurs.filter(j => j.pseudo !== pseudo && !j.out);\n    let valides = 0;\n    let refuses = 0;\n    for (const voter of voters) {\n      const voteSnap = await getDoc(doc(db, \"games\", gameCode, \"votes\", voter.pseudo));\n      if (voteSnap.exists()) {\n        const v = voteSnap.data();\n        if (v.choice === true) valides++;\n        if (v.choice === false) refuses++;\n      }\n    }\n    const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\n    const playerRef = doc(db, \"games\", gameCode, \"players\", pseudo);\n    const gameRef = doc(db, \"games\", gameCode);\n    if (refuses >= valides) {\n      const snap = await getDoc(gameRef);\n      const pioche = snap.data().pioche || [];\n      const bonus = pioche[0];\n      const newPioche = pioche.slice(1);\n      await updateDoc(playerRef, {\n        cartes: arrayUnion(card, bonus)\n      });\n      await updateDoc(gameRef, {\n        pioche: newPioche,\n        currentPlayer: next\n      });\n    } else {\n      await updateDoc(playerRef, {\n        cartes: arrayRemove(card)\n      });\n      await updateDoc(gameRef, {\n        currentPlayer: next\n      });\n    }\n    for (const v of voters) {\n      await deleteDoc(doc(db, \"games\", gameCode, \"votes\", v.pseudo));\n    }\n    checkVictory();\n    setVotePhase(false);\n    setPlayedCard('');\n  };\n  const handleVote = async choice => {\n    await setDoc(doc(db, \"games\", gameCode, \"votes\", pseudo), {\n      choice,\n      timestamp: Date.now()\n    });\n  };\n  const handlePlayCard = async card => {\n    if (card.match(/^[A-Z]$/)) {\n      await startVote(card);\n    } else if (card.startsWith('joker')) {\n      const l = prompt(\"Lettre de ton mot ?\");\n      if (!l || l.length !== 1) return alert(\"Lettre invalide.\");\n      const lettre = l.toUpperCase();\n      const penalty = difficultyScore(lettre);\n      const snap = await getDoc(doc(db, 'games', gameCode));\n      const data = snap.data();\n      const pioche = data.pioche || [];\n      const toGive = pioche.slice(0, penalty);\n      const newPioche = pioche.slice(penalty);\n      const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\n        cartes: arrayRemove(card)\n      });\n      if (toGive.length > 0) {\n        await updateDoc(doc(db, 'games', gameCode, 'players', next), {\n          cartes: arrayUnion(...toGive)\n        });\n      }\n      await updateDoc(doc(db, 'games', gameCode), {\n        pioche: newPioche,\n        currentPlayer: next\n      });\n    } else if (card === 'pass') {\n      const snap = await getDoc(doc(db, 'games', gameCode));\n      const next = getNextPlayer(getNextPlayer(pseudo, joueurs.filter(j => !j.out)), joueurs.filter(j => !j.out));\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\n        cartes: arrayRemove(card)\n      });\n      await updateDoc(doc(db, 'games', gameCode), {\n        currentPlayer: next\n      });\n    } else if (card === 'reverse') {\n      const newSens = -sens;\n      const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\n        cartes: arrayRemove(card)\n      });\n      await updateDoc(doc(db, 'games', gameCode), {\n        sens: newSens,\n        currentPlayer: next\n      });\n    } else if (card === 'crakitoko') {\n      setChoisirTheme(true);\n    }\n  };\n  const handleThemeChosen = async theme => {\n    const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\n    await updateDoc(doc(db, \"games\", gameCode), {\n      theme,\n      currentPlayer: next\n    });\n    await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\n      cartes: arrayRemove('crakitoko')\n    });\n    setChoisirTheme(false);\n  };\n  const checkVictory = async () => {\n    const playerRef = doc(db, \"games\", gameCode, \"players\", pseudo);\n    if (cartes.length <= 1 && !fini) {\n      await updateDoc(playerRef, {\n        out: true\n      });\n      setFini(true);\n    }\n  };\n  const winners = joueurs.filter(j => j.out);\n  const partieTerminee = joueurs.length > 0 && winners.length === joueurs.length;\n  if (partieTerminee) {\n    return /*#__PURE__*/_jsxDEV(WinnerPanel, {\n      winners: winners.map(w => w.pseudo)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83C\\uDFAE Partie : \", gameCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu es : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: pseudo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Joueur actif : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: joueurActif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentTheme, {\n      theme: themeActuel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), monTour && !votePhase && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u23F3 Temps : \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDCCF Tes cartes :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: cartes.map((carte, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => monTour && !votePhase && handlePlayCard(carte),\n        style: {\n          margin: 5,\n          padding: 10,\n          backgroundColor: monTour ? '#d0f0c0' : '#eee',\n          cursor: monTour ? 'pointer' : 'default'\n        },\n        children: carte\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), !monTour && votePhase && /*#__PURE__*/_jsxDEV(VotePanel, {\n      onVote: handleVote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 33\n    }, this), monTour && choisirTheme && /*#__PURE__*/_jsxDEV(ThemeSelector, {\n      onSelect: handleThemeChosen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"ujRk8R8PzEczXilOsAxrGms5mg8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","db","doc","getDoc","onSnapshot","updateDoc","arrayRemove","arrayUnion","setDoc","deleteDoc","collection","VotePanel","ThemeSelector","CurrentTheme","WinnerPanel","jsxDEV","_jsxDEV","Game","gameCode","pseudo","_s","cartes","setCartes","joueurActif","setJoueurActif","piocheRestante","setPiocheRestante","timer","setTimer","monTour","setMonTour","votePhase","setVotePhase","playedCard","setPlayedCard","themeActuel","setThemeActuel","choisirTheme","setChoisirTheme","sens","setSens","joueurs","setJoueurs","fini","setFini","unsubPlayers","snapshot","data","forEach","d","push","id","out","unsubGame","docSnap","exists","_data$pioche","currentPlayer","pioche","length","theme","handleTimeout","interval","setInterval","t","clearInterval","getNextPlayer","current","joueursActifs","list","map","j","index","indexOf","nextIndex","gameRef","snap","gameData","nextCard","newPioche","slice","next","filter","difficultyScore","letter","easy","medium","hard","includes","startVote","card","setTimeout","countVotes","voters","valides","refuses","voter","voteSnap","v","choice","playerRef","bonus","checkVictory","handleVote","timestamp","Date","now","handlePlayCard","match","startsWith","l","prompt","alert","lettre","toUpperCase","penalty","toGive","newSens","handleThemeChosen","winners","partieTerminee","w","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","children","display","flexWrap","carte","i","onClick","margin","backgroundColor","cursor","onVote","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/lamtm/Downloads/cracklist-web/src/components/Game.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  updateDoc,\r\n  arrayRemove,\r\n  arrayUnion,\r\n  setDoc,\r\n  deleteDoc,\r\n  collection\r\n} from 'firebase/firestore';\r\n\r\nimport VotePanel from './VotePanel';\r\nimport ThemeSelector from './ThemeSelector';\r\nimport CurrentTheme from './CurrentTheme';\r\nimport WinnerPanel from './WinnerPanel';\r\n\r\n\r\nfunction Game({ gameCode, pseudo }) {\r\n  const [cartes, setCartes] = useState([]);\r\n  const [joueurActif, setJoueurActif] = useState(null);\r\n  const [piocheRestante, setPiocheRestante] = useState(0);\r\n  const [timer, setTimer] = useState(15);\r\n  const [monTour, setMonTour] = useState(false);\r\n  const [votePhase, setVotePhase] = useState(false);\r\n  const [playedCard, setPlayedCard] = useState('');\r\n  const [themeActuel, setThemeActuel] = useState('');\r\n  const [choisirTheme, setChoisirTheme] = useState(false);\r\n  const [sens, setSens] = useState(1);\r\n  const [joueurs, setJoueurs] = useState([]);\r\n  const [fini, setFini] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const unsubPlayers = onSnapshot(collection(db, \"games\", gameCode, \"players\"), snapshot => {\r\n      const data = [];\r\n      snapshot.forEach(doc => {\r\n        const d = doc.data();\r\n        data.push({ pseudo: doc.id, cartes: d.cartes || [], out: d.out });\r\n        if (doc.id === pseudo) setCartes(d.cartes || []);\r\n      });\r\n      setJoueurs(data);\r\n    });\r\n\r\n    const unsubGame = onSnapshot(doc(db, \"games\", gameCode), (docSnap) => {\r\n      if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        setJoueurActif(data.currentPlayer);\r\n        setMonTour(data.currentPlayer === pseudo);\r\n        setPiocheRestante(data.pioche?.length || 0);\r\n        setThemeActuel(data.theme || '');\r\n        setSens(data.sens || 1);\r\n        setTimer(15);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubPlayers();\r\n      unsubGame();\r\n    };\r\n  }, [gameCode, pseudo]);\r\n\r\n  useEffect(() => {\r\n    if (!monTour || votePhase || fini) return;\r\n    if (timer === 0) {\r\n      handleTimeout();\r\n      return;\r\n    }\r\n    const interval = setInterval(() => setTimer((t) => t - 1), 1000);\r\n    return () => clearInterval(interval);\r\n  }, [monTour, timer, votePhase, fini]);\r\n\r\n  const getNextPlayer = (current, joueursActifs) => {\r\n    const list = joueursActifs.map(j => j.pseudo);\r\n    const index = list.indexOf(current);\r\n    const nextIndex = (index + sens + list.length) % list.length;\r\n    return list[nextIndex];\r\n  };\r\n\r\n  const handleTimeout = async () => {\r\n    const gameRef = doc(db, \"games\", gameCode);\r\n    const snap = await getDoc(gameRef);\r\n    const gameData = snap.data();\r\n    const pioche = gameData.pioche || [];\r\n    const nextCard = pioche[0];\r\n    const newPioche = pioche.slice(1);\r\n    const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\r\n\r\n    await updateDoc(doc(db, \"games\", gameCode, \"players\", pseudo), {\r\n      cartes: arrayUnion(nextCard)\r\n    });\r\n\r\n    await updateDoc(gameRef, {\r\n      pioche: newPioche,\r\n      currentPlayer: next\r\n    });\r\n  };\r\n\r\n  const difficultyScore = (letter) => {\r\n    const easy = 'AEIOTNRSLU';\r\n    const medium = 'BCDFGHJKMP';\r\n    const hard = 'QVWXYZ';\r\n    if (easy.includes(letter)) return 0;\r\n    if (medium.includes(letter)) return 1;\r\n    if (hard.includes(letter)) return 2;\r\n    return 3;\r\n  };\r\n\r\n  const startVote = async (card) => {\r\n    setPlayedCard(card);\r\n    setVotePhase(true);\r\n    setTimeout(() => countVotes(card), 5000);\r\n  };\r\n\r\n  const countVotes = async (card) => {\r\n    const voters = joueurs.filter(j => j.pseudo !== pseudo && !j.out);\r\n    let valides = 0;\r\n    let refuses = 0;\r\n\r\n    for (const voter of voters) {\r\n      const voteSnap = await getDoc(doc(db, \"games\", gameCode, \"votes\", voter.pseudo));\r\n      if (voteSnap.exists()) {\r\n        const v = voteSnap.data();\r\n        if (v.choice === true) valides++;\r\n        if (v.choice === false) refuses++;\r\n      }\r\n    }\r\n\r\n    const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\r\n    const playerRef = doc(db, \"games\", gameCode, \"players\", pseudo);\r\n    const gameRef = doc(db, \"games\", gameCode);\r\n\r\n    if (refuses >= valides) {\r\n      const snap = await getDoc(gameRef);\r\n      const pioche = snap.data().pioche || [];\r\n      const bonus = pioche[0];\r\n      const newPioche = pioche.slice(1);\r\n\r\n      await updateDoc(playerRef, { cartes: arrayUnion(card, bonus) });\r\n      await updateDoc(gameRef, { pioche: newPioche, currentPlayer: next });\r\n    } else {\r\n      await updateDoc(playerRef, { cartes: arrayRemove(card) });\r\n      await updateDoc(gameRef, { currentPlayer: next });\r\n    }\r\n\r\n    for (const v of voters) {\r\n      await deleteDoc(doc(db, \"games\", gameCode, \"votes\", v.pseudo));\r\n    }\r\n\r\n    checkVictory();\r\n    setVotePhase(false);\r\n    setPlayedCard('');\r\n  };\r\n\r\n  const handleVote = async (choice) => {\r\n    await setDoc(doc(db, \"games\", gameCode, \"votes\", pseudo), {\r\n      choice,\r\n      timestamp: Date.now()\r\n    });\r\n  };\r\n    const handlePlayCard = async (card) => {\r\n    if (card.match(/^[A-Z]$/)) {\r\n      await startVote(card);\r\n    } else if (card.startsWith('joker')) {\r\n      const l = prompt(\"Lettre de ton mot ?\");\r\n      if (!l || l.length !== 1) return alert(\"Lettre invalide.\");\r\n      const lettre = l.toUpperCase();\r\n      const penalty = difficultyScore(lettre);\r\n      const snap = await getDoc(doc(db, 'games', gameCode));\r\n      const data = snap.data();\r\n      const pioche = data.pioche || [];\r\n      const toGive = pioche.slice(0, penalty);\r\n      const newPioche = pioche.slice(penalty);\r\n      const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\r\n\r\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\r\n        cartes: arrayRemove(card)\r\n      });\r\n\r\n      if (toGive.length > 0) {\r\n        await updateDoc(doc(db, 'games', gameCode, 'players', next), {\r\n          cartes: arrayUnion(...toGive)\r\n        });\r\n      }\r\n\r\n      await updateDoc(doc(db, 'games', gameCode), {\r\n        pioche: newPioche,\r\n        currentPlayer: next\r\n      });\r\n    } else if (card === 'pass') {\r\n      const snap = await getDoc(doc(db, 'games', gameCode));\r\n      const next = getNextPlayer(\r\n        getNextPlayer(pseudo, joueurs.filter(j => !j.out)),\r\n        joueurs.filter(j => !j.out)\r\n      );\r\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\r\n        cartes: arrayRemove(card)\r\n      });\r\n      await updateDoc(doc(db, 'games', gameCode), {\r\n        currentPlayer: next\r\n      });\r\n    } else if (card === 'reverse') {\r\n      const newSens = -sens;\r\n      const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\r\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\r\n        cartes: arrayRemove(card)\r\n      });\r\n      await updateDoc(doc(db, 'games', gameCode), {\r\n        sens: newSens,\r\n        currentPlayer: next\r\n      });\r\n    } else if (card === 'crakitoko') {\r\n      setChoisirTheme(true);\r\n    }\r\n  };\r\n\r\n  const handleThemeChosen = async (theme) => {\r\n    const next = getNextPlayer(pseudo, joueurs.filter(j => !j.out));\r\n    await updateDoc(doc(db, \"games\", gameCode), {\r\n      theme,\r\n      currentPlayer: next\r\n    });\r\n    await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\r\n      cartes: arrayRemove('crakitoko')\r\n    });\r\n    setChoisirTheme(false);\r\n  };\r\n\r\n  const checkVictory = async () => {\r\n    const playerRef = doc(db, \"games\", gameCode, \"players\", pseudo);\r\n    if (cartes.length <= 1 && !fini) {\r\n      await updateDoc(playerRef, { out: true });\r\n      setFini(true);\r\n    }\r\n  };\r\n\r\nconst winners = joueurs.filter(j => j.out);\r\nconst partieTerminee = joueurs.length > 0 && winners.length === joueurs.length;\r\n\r\nif (partieTerminee) {\r\n  return <WinnerPanel winners={winners.map(w => w.pseudo)} />;\r\n}\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>🎮 Partie : {gameCode}</h2>\r\n      <p>Tu es : <strong>{pseudo}</strong></p>\r\n      <p>Joueur actif : <strong>{joueurActif}</strong></p>\r\n\r\n      <CurrentTheme theme={themeActuel} />\r\n\r\n      {monTour && !votePhase && <p>⏳ Temps : {timer}s</p>}\r\n      <h3>🃏 Tes cartes :</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        {cartes.map((carte, i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => monTour && !votePhase && handlePlayCard(carte)}\r\n            style={{\r\n              margin: 5,\r\n              padding: 10,\r\n              backgroundColor: monTour ? '#d0f0c0' : '#eee',\r\n              cursor: monTour ? 'pointer' : 'default'\r\n            }}\r\n          >\r\n            {carte}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {!monTour && votePhase && <VotePanel onVote={handleVote} />}\r\n      {monTour && choisirTheme && <ThemeSelector onSelect={handleThemeChosen} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}