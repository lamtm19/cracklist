{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lamtm\\\\Downloads\\\\cracklist-web\\\\src\\\\components\\\\Lobby.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\nconst THEMES_LIST = [\"Pr√©nom masculin\", \"Pr√©nom f√©minin\", \"Ville\", \"Pays\", \"Continent\", \"Animal\", \"Fruit\", \"L√©gume\", \"M√©tier\", \"Objet\", \"Couleur\", \"Sport\", \"Film\", \"S√©rie\", \"Chanson\", \"Marque\", \"Moyen de transport\", \"Instrument de musique\", \"Langue\", \"Livre\", \"Dessin anim√©\", \"Invention\", \"Monument\", \"Fleuve ou rivi√®re\", \"Oiseau\", \"Insecte\", \"Plante ou arbre\", \"Pi√®ce de la maison\", \"Partie du corps\", \"Alimentation\", \"Boisson\", \"Marque de v√™tements\", \"√âmotion\", \"Super-h√©ros\", \"Pok√©mon\", \"Pays qui commence par‚Ä¶\", \"Film de Disney\", \"Animal marin\", \"Animal de la savane\", \"Animal de compagnie\", \"Pays en Europe\", \"Pays en Afrique\", \"Ville fran√ßaise\", \"Ville am√©ricaine\", \"Objet √©lectronique\", \"Pays o√π il fait chaud\", \"Pays avec une mer\", \"Profession m√©dicale\", \"Marque de voiture\", \"√âquipe de foot\", \"Personnage de manga\", \"Jeu vid√©o\", \"Appli mobile\", \"Nom de famille courant\", \"Chiffre ou nombre\", \"Mot en anglais\", \"Mot en fran√ßais\", \"Signe du zodiaque\", \"Emoji connu\", \"Appareil √©lectrom√©nager\", \"Nom de star internationale\", \"Nom de star fran√ßaise\", \"Personnage historique\", \"Nom de dinosaure\", \"√âl√©ment chimique\", \"Forme g√©om√©trique\", \"Langue morte\", \"Pays commen√ßant par une voyelle\", \"Mot avec 3 lettres\", \"Mot avec 5 lettres\", \"Animal volant\", \"Pays limitrophe de la France\", \"Ville avec une plage\", \"M√©tier en rapport avec l'√©cole\", \"M√©tier en rapport avec la police\", \"M√©tier en rapport avec les animaux\", \"M√©tier qu'on voit √† la t√©l√©\", \"Chanson connue\", \"Groupe de musique\", \"Chiffre impair\", \"Couleur primaire\", \"Style musical\", \"Accessoire de mode\", \"Pays ayant gagn√© la Coupe du Monde\", \"Mot finissant par -ette\", \"Mot finissant par -oir\", \"Mot qui rime avec \\\"chat\\\"\", \"Mot qui rime avec \\\"on\\\"\"];\nfunction generateCards() {\n  const cards = [];\n\n  // 8 cartes lettres al√©atoires\n  for (let i = 0; i < 5; i++) {\n    cards.push({\n      type: 'letter',\n      letter: LETTERS[Math.floor(Math.random() * LETTERS.length)],\n      id: `letter_${i}_${Date.now()}`\n    });\n  }\n\n  // 1 joker\n  cards.push({\n    type: 'joker',\n    id: `joker_${Date.now()}`\n  });\n\n  // 1 carte sp√©ciale al√©atoire\n  const specialCards = ['reverse', 'swap', 'stop'];\n  cards.push({\n    type: specialCards[Math.floor(Math.random() * specialCards.length)],\n    id: `special_${Date.now()}`\n  });\n\n  // 1 carte Crakitoko avec 3 th√®mes al√©atoires\n  const shuffledThemes = [...THEMES_LIST].sort(() => 0.5 - Math.random());\n  cards.push({\n    type: 'crakitoko',\n    themes: shuffledThemes.slice(0, 3),\n    id: `crakitoko_${Date.now()}`\n  });\n  return cards;\n}\nfunction Lobby({\n  roomCode,\n  playerName,\n  playerId,\n  roomData,\n  onLeaveRoom\n}) {\n  _s();\n  var _normalizedPlayers$fi;\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Debug logs\n  console.log('üè† Lobby - roomData re√ßue:', roomData);\n  console.log('üè† Lobby - players:', roomData === null || roomData === void 0 ? void 0 : roomData.players);\n  console.log('üë§ Lobby - playerId:', playerId);\n\n  // Normaliser players pour qu'il soit toujours un Array valide\n  const normalizedPlayers = React.useMemo(() => {\n    if (!(roomData !== null && roomData !== void 0 && roomData.players)) return [];\n\n    // Si c'est d√©j√† un Array, le retourner\n    if (Array.isArray(roomData.players)) {\n      // V√©rifier que tous les joueurs ont les propri√©t√©s n√©cessaires\n      return roomData.players.filter(p => p && p.id && p.name);\n    }\n\n    // Si c'est un Object, le convertir en Array avec plus de soin\n    if (typeof roomData.players === 'object') {\n      console.log('üîß Conversion Object vers Array');\n      const playersArray = Object.values(roomData.players).filter(p => p && typeof p === 'object' && p.id && p.name);\n      console.log('üîß Joueurs apr√®s filtrage:', playersArray);\n      return playersArray;\n    }\n    return [];\n  }, [roomData === null || roomData === void 0 ? void 0 : roomData.players]);\n  console.log('üîß Players normalis√©s:', normalizedPlayers);\n  const isHost = ((_normalizedPlayers$fi = normalizedPlayers.find(p => p.id === playerId)) === null || _normalizedPlayers$fi === void 0 ? void 0 : _normalizedPlayers$fi.isHost) || false;\n  const canStart = normalizedPlayers.length >= 2;\n  console.log('üëë Lobby - isHost:', isHost);\n  console.log('‚ñ∂Ô∏è Lobby - canStart:', canStart);\n  useEffect(() => {\n    // Mettre √† jour la pr√©sence du joueur\n    const updatePresence = async () => {\n      if (roomData && normalizedPlayers.length > 0) {\n        const playerIndex = normalizedPlayers.findIndex(p => p.id === playerId);\n        if (playerIndex !== -1) {\n          // SOLUTION RADICALE: Toujours r√©√©crire le tableau complet pour √©viter la corruption\n          const updatedPlayers = [...normalizedPlayers];\n          updatedPlayers[playerIndex] = {\n            ...updatedPlayers[playerIndex],\n            lastSeen: Date.now(),\n            connected: true\n          };\n\n          // S'assurer qu'il y a au moins un h√¥te\n          if (!updatedPlayers.some(p => p.isHost)) {\n            updatedPlayers[0].isHost = true;\n            console.log('üëë Attribution forc√©e des droits d\\'h√¥te au premier joueur');\n          }\n          await updateDoc(doc(db, 'rooms', roomCode), {\n            players: updatedPlayers\n          });\n          console.log('‚úÖ Pr√©sence mise √† jour avec tableau complet');\n        }\n      }\n    };\n    updatePresence();\n    const interval = setInterval(updatePresence, 15000); // Toutes les 15 secondes\n\n    return () => clearInterval(interval);\n  }, [roomCode, playerId, normalizedPlayers, roomData]);\n  const startGame = async () => {\n    if (!canStart) {\n      setError('Il faut au moins 2 joueurs pour commencer');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // Choisir un joueur al√©atoire pour choisir le th√®me initial\n      const randomPlayerIndex = Math.floor(Math.random() * normalizedPlayers.length);\n\n      // Pr√©parer les joueurs pour le jeu (avec toutes leurs cartes)\n      const gamePlayers = normalizedPlayers.map(player => ({\n        ...player,\n        cards: player.cards || generateCards() // S'assurer que chaque joueur a des cartes\n      }));\n      await updateDoc(doc(db, 'rooms', roomCode), {\n        gameStarted: true,\n        currentPlayerIndex: randomPlayerIndex,\n        themeSelectionPhase: true,\n        gamePhase: 'theme-selection',\n        currentRound: 1,\n        gameStartTime: Date.now(),\n        players: gamePlayers // Assurer la coh√©rence\n      });\n    } catch (err) {\n      setError('Erreur lors du d√©marrage de la partie');\n      console.error(err);\n    }\n    setLoading(false);\n  };\n  const leaveRoom = async () => {\n    try {\n      if (roomData && normalizedPlayers.length > 0) {\n        const updatedPlayers = normalizedPlayers.filter(p => p.id !== playerId);\n        if (updatedPlayers.length === 0) {\n          // Supprimer la room si plus de joueurs\n          // Note: Vous pourriez vouloir impl√©menter une fonction cloud pour nettoyer automatiquement\n        } else {\n          // Si l'h√¥te part, donner les droits d'h√¥te au premier joueur restant\n          if (isHost && updatedPlayers.length > 0) {\n            updatedPlayers[0].isHost = true;\n          }\n\n          // Toujours r√©√©crire le tableau complet\n          await updateDoc(doc(db, 'rooms', roomCode), {\n            players: updatedPlayers\n          });\n        }\n      }\n    } catch (err) {\n      console.error('Erreur lors de la sortie de la room:', err);\n    }\n    onLeaveRoom();\n  };\n  if (!roomData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobby\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\uD83C\\uDFAE Salle: \", roomCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveRoom,\n          className: \"btn btn-danger leave-btn\",\n          children: \"Quitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"players-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDC65 Joueurs (\", normalizedPlayers.length, \"/10)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"players-list\",\n          children: normalizedPlayers.length > 0 ? normalizedPlayers.map((player, index) => {\n            console.log('üé≠ Rendu joueur:', player.name, 'isHost:', player.isHost);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `player-card ${!player.connected ? 'disconnected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-name\",\n                children: [player.name, player.isHost && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"host-badge\",\n                  children: \"\\uD83D\\uDC51\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 39\n                }, this), !player.connected && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"disconnect-badge\",\n                  children: \"\\uD83D\\uDCF4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cards-count\",\n                children: \"Pr\\xEAt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Chargement des joueurs...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), isHost && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"host-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDFAF Contr\\xF4les d'h\\xF4te\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), !canStart && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning\",\n          children: \"Il faut au moins 2 joueurs pour commencer la partie.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startGame,\n          disabled: !canStart || loading,\n          className: \"btn btn-primary start-btn\",\n          children: loading ? 'D√©marrage...' : 'Commencer la partie'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), !isHost && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u23F3 En attente que l'h\\xF4te lance la partie...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCB Informations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uD83C\\uDFAF Objectif : Se d\\xE9barrasser de toutes ses cartes en premier !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u23F1\\uFE0F 15 secondes pour jouer, 5 secondes pour voter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uD83C\\uDCCF Utilisez les cartes sp\\xE9ciales \\xE0 bon escient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uD83C\\uDFC6 Le premier sans cartes gagne !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uD83D\\uDC65 Les joueurs sans cartes continuent \\xE0 regarder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(Lobby, \"Ye53rK4AvgxQoJ+6/dr/HdqroR0=\");\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useState","useEffect","doc","updateDoc","db","jsxDEV","_jsxDEV","LETTERS","THEMES_LIST","generateCards","cards","i","push","type","letter","Math","floor","random","length","id","Date","now","specialCards","shuffledThemes","sort","themes","slice","Lobby","roomCode","playerName","playerId","roomData","onLeaveRoom","_s","_normalizedPlayers$fi","loading","setLoading","error","setError","console","log","players","normalizedPlayers","useMemo","Array","isArray","filter","p","name","playersArray","Object","values","isHost","find","canStart","updatePresence","playerIndex","findIndex","updatedPlayers","lastSeen","connected","some","interval","setInterval","clearInterval","startGame","randomPlayerIndex","gamePlayers","map","player","gameStarted","currentPlayerIndex","themeSelectionPhase","gamePhase","currentRound","gameStartTime","err","leaveRoom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lamtm/Downloads/cracklist-web/src/components/Lobby.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\nconst THEMES_LIST = [\r\n  \"Pr√©nom masculin\", \"Pr√©nom f√©minin\", \"Ville\", \"Pays\", \"Continent\", \"Animal\", \r\n  \"Fruit\", \"L√©gume\", \"M√©tier\", \"Objet\", \"Couleur\", \"Sport\", \"Film\", \"S√©rie\", \r\n  \"Chanson\", \"Marque\", \"Moyen de transport\", \"Instrument de musique\", \"Langue\", \r\n  \"Livre\", \"Dessin anim√©\", \"Invention\", \"Monument\", \"Fleuve ou rivi√®re\", \"Oiseau\", \r\n  \"Insecte\", \"Plante ou arbre\", \"Pi√®ce de la maison\", \"Partie du corps\", \r\n  \"Alimentation\", \"Boisson\", \"Marque de v√™tements\", \"√âmotion\", \"Super-h√©ros\", \r\n  \"Pok√©mon\", \"Pays qui commence par‚Ä¶\", \"Film de Disney\", \"Animal marin\", \r\n  \"Animal de la savane\", \"Animal de compagnie\", \"Pays en Europe\", \"Pays en Afrique\", \r\n  \"Ville fran√ßaise\", \"Ville am√©ricaine\", \"Objet √©lectronique\", \"Pays o√π il fait chaud\", \r\n  \"Pays avec une mer\", \"Profession m√©dicale\", \"Marque de voiture\", \"√âquipe de foot\", \r\n  \"Personnage de manga\", \"Jeu vid√©o\", \"Appli mobile\", \"Nom de famille courant\", \r\n  \"Chiffre ou nombre\", \"Mot en anglais\", \"Mot en fran√ßais\", \"Signe du zodiaque\", \r\n  \"Emoji connu\", \"Appareil √©lectrom√©nager\", \"Nom de star internationale\", \r\n  \"Nom de star fran√ßaise\", \"Personnage historique\", \"Nom de dinosaure\", \r\n  \"√âl√©ment chimique\", \"Forme g√©om√©trique\", \"Langue morte\", \r\n  \"Pays commen√ßant par une voyelle\", \"Mot avec 3 lettres\", \"Mot avec 5 lettres\", \r\n  \"Animal volant\", \"Pays limitrophe de la France\", \"Ville avec une plage\", \r\n  \"M√©tier en rapport avec l'√©cole\", \"M√©tier en rapport avec la police\", \r\n  \"M√©tier en rapport avec les animaux\", \"M√©tier qu'on voit √† la t√©l√©\", \r\n  \"Chanson connue\", \"Groupe de musique\", \"Chiffre impair\", \"Couleur primaire\", \r\n  \"Style musical\", \"Accessoire de mode\", \"Pays ayant gagn√© la Coupe du Monde\", \r\n  \"Mot finissant par -ette\", \"Mot finissant par -oir\", \"Mot qui rime avec \\\"chat\\\"\", \r\n  \"Mot qui rime avec \\\"on\\\"\"\r\n];\r\n\r\nfunction generateCards() {\r\n  const cards = [];\r\n  \r\n  // 8 cartes lettres al√©atoires\r\n  for (let i = 0; i < 5; i++) {\r\n    cards.push({\r\n      type: 'letter',\r\n      letter: LETTERS[Math.floor(Math.random() * LETTERS.length)],\r\n      id: `letter_${i}_${Date.now()}`\r\n    });\r\n  }\r\n  \r\n  // 1 joker\r\n  cards.push({\r\n    type: 'joker',\r\n    id: `joker_${Date.now()}`\r\n  });\r\n  \r\n  // 1 carte sp√©ciale al√©atoire\r\n  const specialCards = ['reverse', 'swap', 'stop'];\r\n  cards.push({\r\n    type: specialCards[Math.floor(Math.random() * specialCards.length)],\r\n    id: `special_${Date.now()}`\r\n  });\r\n  \r\n  // 1 carte Crakitoko avec 3 th√®mes al√©atoires\r\n  const shuffledThemes = [...THEMES_LIST].sort(() => 0.5 - Math.random());\r\n  cards.push({\r\n    type: 'crakitoko',\r\n    themes: shuffledThemes.slice(0, 3),\r\n    id: `crakitoko_${Date.now()}`\r\n  });\r\n  \r\n  return cards;\r\n}\r\n\r\nfunction Lobby({ roomCode, playerName, playerId, roomData, onLeaveRoom }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Debug logs\r\n  console.log('üè† Lobby - roomData re√ßue:', roomData);\r\n  console.log('üè† Lobby - players:', roomData?.players);\r\n  console.log('üë§ Lobby - playerId:', playerId);\r\n\r\n  // Normaliser players pour qu'il soit toujours un Array valide\r\n  const normalizedPlayers = React.useMemo(() => {\r\n    if (!roomData?.players) return [];\r\n    \r\n    // Si c'est d√©j√† un Array, le retourner\r\n    if (Array.isArray(roomData.players)) {\r\n      // V√©rifier que tous les joueurs ont les propri√©t√©s n√©cessaires\r\n      return roomData.players.filter(p => p && p.id && p.name);\r\n    }\r\n    \r\n    // Si c'est un Object, le convertir en Array avec plus de soin\r\n    if (typeof roomData.players === 'object') {\r\n      console.log('üîß Conversion Object vers Array');\r\n      const playersArray = Object.values(roomData.players)\r\n        .filter(p => p && typeof p === 'object' && p.id && p.name);\r\n      \r\n      console.log('üîß Joueurs apr√®s filtrage:', playersArray);\r\n      return playersArray;\r\n    }\r\n    \r\n    return [];\r\n  }, [roomData?.players]);\r\n\r\n  console.log('üîß Players normalis√©s:', normalizedPlayers);\r\n\r\n  const isHost = normalizedPlayers.find(p => p.id === playerId)?.isHost || false;\r\n  const canStart = normalizedPlayers.length >= 2;\r\n\r\n  console.log('üëë Lobby - isHost:', isHost);\r\n  console.log('‚ñ∂Ô∏è Lobby - canStart:', canStart);\r\n\r\n  useEffect(() => {\r\n    // Mettre √† jour la pr√©sence du joueur\r\n    const updatePresence = async () => {\r\n      if (roomData && normalizedPlayers.length > 0) {\r\n        const playerIndex = normalizedPlayers.findIndex(p => p.id === playerId);\r\n        if (playerIndex !== -1) {\r\n          // SOLUTION RADICALE: Toujours r√©√©crire le tableau complet pour √©viter la corruption\r\n          const updatedPlayers = [...normalizedPlayers];\r\n          updatedPlayers[playerIndex] = {\r\n            ...updatedPlayers[playerIndex],\r\n            lastSeen: Date.now(),\r\n            connected: true\r\n          };\r\n          \r\n          // S'assurer qu'il y a au moins un h√¥te\r\n          if (!updatedPlayers.some(p => p.isHost)) {\r\n            updatedPlayers[0].isHost = true;\r\n            console.log('üëë Attribution forc√©e des droits d\\'h√¥te au premier joueur');\r\n          }\r\n          \r\n          await updateDoc(doc(db, 'rooms', roomCode), {\r\n            players: updatedPlayers\r\n          });\r\n          console.log('‚úÖ Pr√©sence mise √† jour avec tableau complet');\r\n        }\r\n      }\r\n    };\r\n\r\n    updatePresence();\r\n    const interval = setInterval(updatePresence, 15000); // Toutes les 15 secondes\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomCode, playerId, normalizedPlayers, roomData]);\r\n\r\n  const startGame = async () => {\r\n    if (!canStart) {\r\n      setError('Il faut au moins 2 joueurs pour commencer');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Choisir un joueur al√©atoire pour choisir le th√®me initial\r\n      const randomPlayerIndex = Math.floor(Math.random() * normalizedPlayers.length);\r\n      \r\n      // Pr√©parer les joueurs pour le jeu (avec toutes leurs cartes)\r\n      const gamePlayers = normalizedPlayers.map(player => ({\r\n        ...player,\r\n        cards: player.cards || generateCards() // S'assurer que chaque joueur a des cartes\r\n      }));\r\n      \r\n      await updateDoc(doc(db, 'rooms', roomCode), {\r\n        gameStarted: true,\r\n        currentPlayerIndex: randomPlayerIndex,\r\n        themeSelectionPhase: true,\r\n        gamePhase: 'theme-selection',\r\n        currentRound: 1,\r\n        gameStartTime: Date.now(),\r\n        players: gamePlayers // Assurer la coh√©rence\r\n      });\r\n    } catch (err) {\r\n      setError('Erreur lors du d√©marrage de la partie');\r\n      console.error(err);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const leaveRoom = async () => {\r\n    try {\r\n      if (roomData && normalizedPlayers.length > 0) {\r\n        const updatedPlayers = normalizedPlayers.filter(p => p.id !== playerId);\r\n        \r\n        if (updatedPlayers.length === 0) {\r\n          // Supprimer la room si plus de joueurs\r\n          // Note: Vous pourriez vouloir impl√©menter une fonction cloud pour nettoyer automatiquement\r\n        } else {\r\n          // Si l'h√¥te part, donner les droits d'h√¥te au premier joueur restant\r\n          if (isHost && updatedPlayers.length > 0) {\r\n            updatedPlayers[0].isHost = true;\r\n          }\r\n          \r\n          // Toujours r√©√©crire le tableau complet\r\n          await updateDoc(doc(db, 'rooms', roomCode), {\r\n            players: updatedPlayers\r\n          });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Erreur lors de la sortie de la room:', err);\r\n    }\r\n    \r\n    onLeaveRoom();\r\n  };\r\n\r\n  if (!roomData) {\r\n    return <div className=\"loading\">Chargement...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"lobby\">\r\n      <div className=\"lobby-container\">\r\n        <div className=\"lobby-header\">\r\n          <h1>üéÆ Salle: {roomCode}</h1>\r\n          <button onClick={leaveRoom} className=\"btn btn-danger leave-btn\">\r\n            Quitter\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"players-section\">\r\n          <h2>üë• Joueurs ({normalizedPlayers.length}/10)</h2>\r\n          <div className=\"players-list\">\r\n            {normalizedPlayers.length > 0 ? normalizedPlayers.map((player, index) => {\r\n              console.log('üé≠ Rendu joueur:', player.name, 'isHost:', player.isHost);\r\n              return (\r\n                <div key={player.id} className={`player-card ${!player.connected ? 'disconnected' : ''}`}>\r\n                  <span className=\"player-name\">\r\n                    {player.name}\r\n                    {player.isHost && <span className=\"host-badge\">üëë</span>}\r\n                    {!player.connected && <span className=\"disconnect-badge\">üì¥</span>}\r\n                  </span>\r\n                  <span className=\"cards-count\">Pr√™t</span>\r\n                </div>\r\n              );\r\n            }) : (\r\n              <div>Chargement des joueurs...</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {isHost && (\r\n          <div className=\"host-controls\">\r\n            <h3>üéØ Contr√¥les d'h√¥te</h3>\r\n            \r\n            {!canStart && (\r\n              <p className=\"warning\">Il faut au moins 2 joueurs pour commencer la partie.</p>\r\n            )}\r\n            \r\n            <button \r\n              onClick={startGame}\r\n              disabled={!canStart || loading}\r\n              className=\"btn btn-primary start-btn\"\r\n            >\r\n              {loading ? 'D√©marrage...' : 'Commencer la partie'}\r\n            </button>\r\n            \r\n            {error && <div className=\"error-message\">{error}</div>}\r\n          </div>\r\n        )}\r\n\r\n        {!isHost && (\r\n          <div className=\"waiting-message\">\r\n            <p>‚è≥ En attente que l'h√¥te lance la partie...</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"lobby-info\">\r\n          <h3>üìã Informations</h3>\r\n          <ul>\r\n            <li>üéØ Objectif : Se d√©barrasser de toutes ses cartes en premier !</li>\r\n            <li>‚è±Ô∏è 15 secondes pour jouer, 5 secondes pour voter</li>\r\n            <li>üÉè Utilisez les cartes sp√©ciales √† bon escient</li>\r\n            <li>üèÜ Le premier sans cartes gagne !</li>\r\n            <li>üë• Les joueurs sans cartes continuent √† regarder</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lobby;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}