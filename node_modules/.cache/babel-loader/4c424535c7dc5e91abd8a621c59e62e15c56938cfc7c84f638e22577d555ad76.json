{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lamtm\\\\Downloads\\\\cracklist-web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { onSnapshot, doc } from 'firebase/firestore';\nimport { db } from './firebase';\nimport Home from './components/Home';\nimport Lobby from './components/Lobby';\nimport Game from './components/Game';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('home'); // 'home', 'lobby', 'game'\n  const [roomCode, setRoomCode] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [playerId, setPlayerId] = useState('');\n  const [roomData, setRoomData] = useState(null);\n  useEffect(() => {\n    if (roomCode && gameState !== 'home') {\n      const unsubscribe = onSnapshot(doc(db, 'rooms', roomCode), doc => {\n        if (doc.exists()) {\n          const data = doc.data();\n          setRoomData(data);\n\n          // Déterminer l'état du jeu\n          if (data.gameStarted) {\n            setGameState('game');\n          } else {\n            setGameState('lobby');\n          }\n        } else {\n          // La room n'existe plus, retour à l'accueil\n          setGameState('home');\n          setRoomCode('');\n          setRoomData(null);\n        }\n      });\n      return () => unsubscribe();\n    }\n  }, [roomCode, gameState]);\n  const handleJoinRoom = (code, name, id) => {\n    setRoomCode(code);\n    setPlayerName(name);\n    setPlayerId(id);\n    setGameState('lobby');\n  };\n  const handleLeaveRoom = () => {\n    setGameState('home');\n    setRoomCode('');\n    setPlayerName('');\n    setPlayerId('');\n    setRoomData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameState === 'home' && /*#__PURE__*/_jsxDEV(Home, {\n      onJoinRoom: handleJoinRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), gameState === 'lobby' && /*#__PURE__*/_jsxDEV(Lobby, {\n      roomCode: roomCode,\n      playerName: playerName,\n      playerId: playerId,\n      roomData: roomData,\n      onLeaveRoom: handleLeaveRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), gameState === 'game' && /*#__PURE__*/_jsxDEV(Game, {\n      roomCode: roomCode,\n      playerName: playerName,\n      playerId: playerId,\n      roomData: roomData,\n      onLeaveRoom: handleLeaveRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hid/9IfLgpCtNtxiuy0ctbhDO78=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","onSnapshot","doc","db","Home","Lobby","Game","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","roomCode","setRoomCode","playerName","setPlayerName","playerId","setPlayerId","roomData","setRoomData","unsubscribe","exists","data","gameStarted","handleJoinRoom","code","name","id","handleLeaveRoom","className","children","onJoinRoom","fileName","_jsxFileName","lineNumber","columnNumber","onLeaveRoom","_c","$RefreshReg$"],"sources":["C:/Users/lamtm/Downloads/cracklist-web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { onSnapshot, doc } from 'firebase/firestore';\nimport { db } from './firebase';\nimport Home from './components/Home';\nimport Lobby from './components/Lobby';\nimport Game from './components/Game';\nimport './App.css';\n\nfunction App() {\n  const [gameState, setGameState] = useState('home'); // 'home', 'lobby', 'game'\n  const [roomCode, setRoomCode] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [playerId, setPlayerId] = useState('');\n  const [roomData, setRoomData] = useState(null);\n\n  useEffect(() => {\n    if (roomCode && gameState !== 'home') {\n      const unsubscribe = onSnapshot(doc(db, 'rooms', roomCode), (doc) => {\n        if (doc.exists()) {\n          const data = doc.data();\n          setRoomData(data);\n          \n          // Déterminer l'état du jeu\n          if (data.gameStarted) {\n            setGameState('game');\n          } else {\n            setGameState('lobby');\n          }\n        } else {\n          // La room n'existe plus, retour à l'accueil\n          setGameState('home');\n          setRoomCode('');\n          setRoomData(null);\n        }\n      });\n\n      return () => unsubscribe();\n    }\n  }, [roomCode, gameState]);\n\n  const handleJoinRoom = (code, name, id) => {\n    setRoomCode(code);\n    setPlayerName(name);\n    setPlayerId(id);\n    setGameState('lobby');\n  };\n\n  const handleLeaveRoom = () => {\n    setGameState('home');\n    setRoomCode('');\n    setPlayerName('');\n    setPlayerId('');\n    setRoomData(null);\n  };\n\n  return (\n    <div className=\"App\">\n      {gameState === 'home' && (\n        <Home onJoinRoom={handleJoinRoom} />\n      )}\n      \n      {gameState === 'lobby' && (\n        <Lobby \n          roomCode={roomCode}\n          playerName={playerName}\n          playerId={playerId}\n          roomData={roomData}\n          onLeaveRoom={handleLeaveRoom}\n        />\n      )}\n      \n      {gameState === 'game' && (\n        <Game \n          roomCode={roomCode}\n          playerName={playerName}\n          playerId={playerId}\n          roomData={roomData}\n          onLeaveRoom={handleLeaveRoom}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}