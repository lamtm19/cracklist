{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lamtm\\\\Downloads\\\\cracklist-web\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { doc, getDoc, onSnapshot, updateDoc, arrayRemove, arrayUnion, setDoc, deleteDoc, collection } from 'firebase/firestore';\nimport VotePanel from './VotePanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  gameCode,\n  pseudo\n}) {\n  _s();\n  const [cartes, setCartes] = useState([]);\n  const [joueurActif, setJoueurActif] = useState(null);\n  const [piocheRestante, setPiocheRestante] = useState(0);\n  const [timer, setTimer] = useState(15);\n  const [monTour, setMonTour] = useState(false);\n  const [votePhase, setVotePhase] = useState(false);\n  const [playedCard, setPlayedCard] = useState('');\n  useEffect(() => {\n    const playerRef = doc(db, 'games', gameCode, 'players', pseudo);\n    const unsubPlayer = onSnapshot(playerRef, docSnap => {\n      if (docSnap.exists()) {\n        setCartes(docSnap.data().cartes || []);\n      }\n    });\n    const gameRef = doc(db, 'games', gameCode);\n    const unsubGame = onSnapshot(gameRef, docSnap => {\n      if (docSnap.exists()) {\n        var _data$pioche;\n        const data = docSnap.data();\n        setJoueurActif(data.currentPlayer);\n        setPiocheRestante(((_data$pioche = data.pioche) === null || _data$pioche === void 0 ? void 0 : _data$pioche.length) || 0);\n        setMonTour(data.currentPlayer === pseudo);\n        setTimer(15);\n      }\n    });\n    return () => {\n      unsubPlayer();\n      unsubGame();\n    };\n  }, [gameCode, pseudo]);\n  useEffect(() => {\n    if (!monTour || votePhase) return;\n    if (timer === 0) {\n      handleTimeout();\n      return;\n    }\n    const interval = setInterval(() => setTimer(prev => prev - 1), 1000);\n    return () => clearInterval(interval);\n  }, [monTour, timer, votePhase]);\n  const getNextPlayer = (gameData, current) => {\n    const sens = gameData.sens || 1;\n    const players = Object.keys(gameData.players || {});\n    const index = players.indexOf(current);\n    const nextIndex = (index + sens + players.length) % players.length;\n    return players[nextIndex];\n  };\n  const handleTimeout = async () => {\n    const gameRef = doc(db, 'games', gameCode);\n    const snap = await getDoc(gameRef);\n    const gameData = snap.data();\n    const pioche = gameData.pioche || [];\n    const nextCard = pioche[0];\n    const newPioche = pioche.slice(1);\n    await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\n      cartes: arrayUnion(nextCard)\n    });\n    await updateDoc(gameRef, {\n      pioche: newPioche,\n      currentPlayer: getNextPlayer(gameData, pseudo)\n    });\n  };\n  const difficultyScore = letter => {\n    const easy = 'AEIOTNRSLU';\n    const medium = 'BCDFGHJKMP';\n    const hard = 'QVWXYZ';\n    if (easy.includes(letter)) return 0;\n    if (medium.includes(letter)) return 1;\n    if (hard.includes(letter)) return 2;\n    return 3;\n  };\n  const startVote = async card => {\n    setPlayedCard(card);\n    setVotePhase(true);\n    const voteDoc = doc(db, 'games', gameCode, 'votes', pseudo);\n    await setDoc(voteDoc, {\n      card,\n      timestamp: Date.now()\n    });\n    setTimeout(() => countVotes(card), 5000);\n  };\n  const countVotes = async card => {\n    const gameRef = doc(db, 'games', gameCode);\n    const snap = await getDoc(gameRef);\n    const gameData = snap.data();\n    const voters = Object.keys(gameData.players || {}).filter(p => p !== pseudo);\n    let valides = 0;\n    let refuses = 0;\n    for (const voter of voters) {\n      const voteSnap = await getDoc(doc(db, 'games', gameCode, 'votes', voter));\n      if (voteSnap.exists()) {\n        const vote = voteSnap.data();\n        if (vote.choice === true) valides++;\n        if (vote.choice === false) refuses++;\n      }\n    }\n    const next = getNextPlayer(gameData, pseudo);\n    const playerRef = doc(db, 'games', gameCode, 'players', pseudo);\n    if (refuses >= valides) {\n      const pioche = gameData.pioche || [];\n      const bonus = pioche[0];\n      const newPioche = pioche.slice(1);\n      await updateDoc(playerRef, {\n        cartes: arrayUnion(card, bonus)\n      });\n      await updateDoc(gameRef, {\n        pioche: newPioche,\n        currentPlayer: next\n      });\n    } else {\n      await updateDoc(playerRef, {\n        cartes: arrayRemove(card)\n      });\n      await updateDoc(gameRef, {\n        currentPlayer: next\n      });\n    }\n    for (const voter of voters) {\n      await deleteDoc(doc(db, 'games', gameCode, 'votes', voter));\n    }\n    setVotePhase(false);\n    setPlayedCard('');\n  };\n  const handleVote = async choice => {\n    await setDoc(doc(db, 'games', gameCode, 'votes', pseudo), {\n      choice,\n      timestamp: Date.now()\n    });\n  };\n  const handlePlayCard = async card => {\n    if (card.match(/^[A-Z]$/)) {\n      await startVote(card);\n    } else if (card.startsWith('joker')) {\n      const l = prompt(\"Quelle lettre commence ton mot ?\");\n      if (!l || l.length !== 1) return alert(\"Lettre invalide.\");\n      const lettre = l.toUpperCase();\n      const penalty = difficultyScore(lettre);\n      const gameRef = doc(db, 'games', gameCode);\n      const snap = await getDoc(gameRef);\n      const gameData = snap.data();\n      const pioche = gameData.pioche || [];\n      const toGive = pioche.slice(0, penalty);\n      const newPioche = pioche.slice(penalty);\n      const next = getNextPlayer(gameData, pseudo);\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\n        cartes: arrayRemove(card)\n      });\n      await updateDoc(doc(db, 'games', gameCode, 'players', next), {\n        cartes: arrayUnion(...toGive)\n      });\n      await updateDoc(gameRef, {\n        pioche: newPioche,\n        currentPlayer: next\n      });\n    } else {\n      const gameRef = doc(db, 'games', gameCode);\n      const snap = await getDoc(gameRef);\n      const gameData = snap.data();\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\n        cartes: arrayRemove(card)\n      });\n      await updateDoc(gameRef, {\n        currentPlayer: getNextPlayer(gameData, pseudo)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83C\\uDFAE Partie : \", gameCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu es : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: pseudo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Joueur actif : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: joueurActif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Mon tour : \", monTour ? \"✅ OUI\" : \"❌ NON\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), monTour && !votePhase && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u23F3 Temps restant : \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDCCF Tes cartes :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: cartes.map((carte, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => monTour && !votePhase && handlePlayCard(carte),\n        style: {\n          margin: 5,\n          padding: 10,\n          backgroundColor: monTour ? '#d0f0c0' : '#eee',\n          cursor: monTour ? 'pointer' : 'default'\n        },\n        children: carte\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), !monTour && votePhase && /*#__PURE__*/_jsxDEV(VotePanel, {\n      onVote: handleVote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Y3W1c1AWLIohFPXrbovFfrU5AWs=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","db","doc","getDoc","onSnapshot","updateDoc","arrayRemove","arrayUnion","setDoc","deleteDoc","collection","VotePanel","jsxDEV","_jsxDEV","Game","gameCode","pseudo","_s","cartes","setCartes","joueurActif","setJoueurActif","piocheRestante","setPiocheRestante","timer","setTimer","monTour","setMonTour","votePhase","setVotePhase","playedCard","setPlayedCard","playerRef","unsubPlayer","docSnap","exists","data","gameRef","unsubGame","_data$pioche","currentPlayer","pioche","length","handleTimeout","interval","setInterval","prev","clearInterval","getNextPlayer","gameData","current","sens","players","Object","keys","index","indexOf","nextIndex","snap","nextCard","newPioche","slice","difficultyScore","letter","easy","medium","hard","includes","startVote","card","voteDoc","timestamp","Date","now","setTimeout","countVotes","voters","filter","p","valides","refuses","voter","voteSnap","vote","choice","next","bonus","handleVote","handlePlayCard","match","startsWith","l","prompt","alert","lettre","toUpperCase","penalty","toGive","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","map","carte","i","onClick","margin","backgroundColor","cursor","onVote","_c","$RefreshReg$"],"sources":["C:/Users/lamtm/Downloads/cracklist-web/src/components/Game.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  updateDoc,\r\n  arrayRemove,\r\n  arrayUnion,\r\n  setDoc,\r\n  deleteDoc,\r\n  collection,\r\n} from 'firebase/firestore';\r\n\r\nimport VotePanel from './VotePanel';\r\n\r\nfunction Game({ gameCode, pseudo }) {\r\n  const [cartes, setCartes] = useState([]);\r\n  const [joueurActif, setJoueurActif] = useState(null);\r\n  const [piocheRestante, setPiocheRestante] = useState(0);\r\n  const [timer, setTimer] = useState(15);\r\n  const [monTour, setMonTour] = useState(false);\r\n  const [votePhase, setVotePhase] = useState(false);\r\n  const [playedCard, setPlayedCard] = useState('');\r\n\r\n  useEffect(() => {\r\n    const playerRef = doc(db, 'games', gameCode, 'players', pseudo);\r\n    const unsubPlayer = onSnapshot(playerRef, (docSnap) => {\r\n      if (docSnap.exists()) {\r\n        setCartes(docSnap.data().cartes || []);\r\n      }\r\n    });\r\n\r\n    const gameRef = doc(db, 'games', gameCode);\r\n    const unsubGame = onSnapshot(gameRef, (docSnap) => {\r\n      if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        setJoueurActif(data.currentPlayer);\r\n        setPiocheRestante(data.pioche?.length || 0);\r\n        setMonTour(data.currentPlayer === pseudo);\r\n        setTimer(15);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubPlayer();\r\n      unsubGame();\r\n    };\r\n  }, [gameCode, pseudo]);\r\n\r\n  useEffect(() => {\r\n    if (!monTour || votePhase) return;\r\n    if (timer === 0) {\r\n      handleTimeout();\r\n      return;\r\n    }\r\n    const interval = setInterval(() => setTimer((prev) => prev - 1), 1000);\r\n    return () => clearInterval(interval);\r\n  }, [monTour, timer, votePhase]);\r\n\r\n  const getNextPlayer = (gameData, current) => {\r\n    const sens = gameData.sens || 1;\r\n    const players = Object.keys(gameData.players || {});\r\n    const index = players.indexOf(current);\r\n    const nextIndex = (index + sens + players.length) % players.length;\r\n    return players[nextIndex];\r\n  };\r\n\r\n  const handleTimeout = async () => {\r\n    const gameRef = doc(db, 'games', gameCode);\r\n    const snap = await getDoc(gameRef);\r\n    const gameData = snap.data();\r\n    const pioche = gameData.pioche || [];\r\n    const nextCard = pioche[0];\r\n    const newPioche = pioche.slice(1);\r\n\r\n    await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\r\n      cartes: arrayUnion(nextCard),\r\n    });\r\n\r\n    await updateDoc(gameRef, {\r\n      pioche: newPioche,\r\n      currentPlayer: getNextPlayer(gameData, pseudo),\r\n    });\r\n  };\r\n\r\n  const difficultyScore = (letter) => {\r\n    const easy = 'AEIOTNRSLU';\r\n    const medium = 'BCDFGHJKMP';\r\n    const hard = 'QVWXYZ';\r\n    if (easy.includes(letter)) return 0;\r\n    if (medium.includes(letter)) return 1;\r\n    if (hard.includes(letter)) return 2;\r\n    return 3;\r\n  };\r\n\r\n  const startVote = async (card) => {\r\n    setPlayedCard(card);\r\n    setVotePhase(true);\r\n\r\n    const voteDoc = doc(db, 'games', gameCode, 'votes', pseudo);\r\n    await setDoc(voteDoc, { card, timestamp: Date.now() });\r\n\r\n    setTimeout(() => countVotes(card), 5000);\r\n  };\r\n\r\n  const countVotes = async (card) => {\r\n    const gameRef = doc(db, 'games', gameCode);\r\n    const snap = await getDoc(gameRef);\r\n    const gameData = snap.data();\r\n    const voters = Object.keys(gameData.players || {}).filter((p) => p !== pseudo);\r\n\r\n    let valides = 0;\r\n    let refuses = 0;\r\n    for (const voter of voters) {\r\n      const voteSnap = await getDoc(doc(db, 'games', gameCode, 'votes', voter));\r\n      if (voteSnap.exists()) {\r\n        const vote = voteSnap.data();\r\n        if (vote.choice === true) valides++;\r\n        if (vote.choice === false) refuses++;\r\n      }\r\n    }\r\n\r\n    const next = getNextPlayer(gameData, pseudo);\r\n    const playerRef = doc(db, 'games', gameCode, 'players', pseudo);\r\n\r\n    if (refuses >= valides) {\r\n      const pioche = gameData.pioche || [];\r\n      const bonus = pioche[0];\r\n      const newPioche = pioche.slice(1);\r\n      await updateDoc(playerRef, { cartes: arrayUnion(card, bonus) });\r\n      await updateDoc(gameRef, { pioche: newPioche, currentPlayer: next });\r\n    } else {\r\n      await updateDoc(playerRef, { cartes: arrayRemove(card) });\r\n      await updateDoc(gameRef, { currentPlayer: next });\r\n    }\r\n\r\n    for (const voter of voters) {\r\n      await deleteDoc(doc(db, 'games', gameCode, 'votes', voter));\r\n    }\r\n\r\n    setVotePhase(false);\r\n    setPlayedCard('');\r\n  };\r\n\r\n  const handleVote = async (choice) => {\r\n    await setDoc(doc(db, 'games', gameCode, 'votes', pseudo), {\r\n      choice,\r\n      timestamp: Date.now(),\r\n    });\r\n  };\r\n\r\n  const handlePlayCard = async (card) => {\r\n    if (card.match(/^[A-Z]$/)) {\r\n      await startVote(card);\r\n    } else if (card.startsWith('joker')) {\r\n      const l = prompt(\"Quelle lettre commence ton mot ?\");\r\n      if (!l || l.length !== 1) return alert(\"Lettre invalide.\");\r\n      const lettre = l.toUpperCase();\r\n      const penalty = difficultyScore(lettre);\r\n\r\n      const gameRef = doc(db, 'games', gameCode);\r\n      const snap = await getDoc(gameRef);\r\n      const gameData = snap.data();\r\n      const pioche = gameData.pioche || [];\r\n      const toGive = pioche.slice(0, penalty);\r\n      const newPioche = pioche.slice(penalty);\r\n      const next = getNextPlayer(gameData, pseudo);\r\n\r\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\r\n        cartes: arrayRemove(card),\r\n      });\r\n\r\n      await updateDoc(doc(db, 'games', gameCode, 'players', next), {\r\n        cartes: arrayUnion(...toGive),\r\n      });\r\n\r\n      await updateDoc(gameRef, {\r\n        pioche: newPioche,\r\n        currentPlayer: next,\r\n      });\r\n    } else {\r\n      const gameRef = doc(db, 'games', gameCode);\r\n      const snap = await getDoc(gameRef);\r\n      const gameData = snap.data();\r\n      await updateDoc(doc(db, 'games', gameCode, 'players', pseudo), {\r\n        cartes: arrayRemove(card),\r\n      });\r\n      await updateDoc(gameRef, {\r\n        currentPlayer: getNextPlayer(gameData, pseudo),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>🎮 Partie : {gameCode}</h2>\r\n      <p>Tu es : <strong>{pseudo}</strong></p>\r\n      <p>Joueur actif : <strong>{joueurActif}</strong></p>\r\n      <p>Mon tour : {monTour ? \"✅ OUI\" : \"❌ NON\"}</p>\r\n      {monTour && !votePhase && <p>⏳ Temps restant : {timer}s</p>}\r\n\r\n      <h3>🃏 Tes cartes :</h3>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        {cartes.map((carte, i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => monTour && !votePhase && handlePlayCard(carte)}\r\n            style={{\r\n              margin: 5,\r\n              padding: 10,\r\n              backgroundColor: monTour ? '#d0f0c0' : '#eee',\r\n              cursor: monTour ? 'pointer' : 'default',\r\n            }}\r\n          >\r\n            {carte}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {!monTour && votePhase && <VotePanel onVote={handleVote} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}