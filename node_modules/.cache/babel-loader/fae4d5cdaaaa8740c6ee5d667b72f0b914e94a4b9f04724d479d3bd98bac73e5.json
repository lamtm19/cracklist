{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lamtm\\\\Downloads\\\\cracklist-web\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { doc, updateDoc, collection, onSnapshot, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  gameCode,\n  pseudo\n}) {\n  _s();\n  const [joueurs, setJoueurs] = useState([]);\n  const [cartes, setCartes] = useState([]);\n  const [joueurActif, setJoueurActif] = useState('');\n  const [monTour, setMonTour] = useState(false);\n  useEffect(() => {\n    if (!gameCode || !pseudo) return;\n    const unsubJoueurs = onSnapshot(collection(db, 'games', gameCode, 'players'), snap => {\n      const list = snap.docs.map(doc => doc.data());\n      setJoueurs(list);\n    });\n    const unsubGame = onSnapshot(doc(db, 'games', gameCode), snap => {\n      const data = snap.data();\n      if (data) {\n        setJoueurActif(data.joueurActif || '');\n        setMonTour(data.joueurActif === pseudo);\n      }\n    });\n    return () => {\n      unsubJoueurs();\n      unsubGame();\n    };\n  }, [gameCode, pseudo]);\n  useEffect(() => {\n    if (cartes.length === 0 && monTour) {\n      // Donner 1 carte quand on a plus rien\n      const nouvelleCarte = tirerCarteAleatoire();\n      setCartes([nouvelleCarte]);\n    }\n  }, [cartes, monTour]);\n  const tirerCarteAleatoire = () => {\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    const lettre = alphabet[Math.floor(Math.random() * alphabet.length)];\n    return lettre;\n  };\n  const handlePlayCard = async lettre => {\n    if (!gameCode || !pseudo || !lettre) return;\n    await updateDoc(doc(db, 'games', gameCode), {\n      joueurActif: getNextPlayer()\n    });\n    setCartes(cartes.filter(c => c !== lettre));\n  };\n  const getNextPlayer = () => {\n    var _joueurs$next;\n    if (joueurs.length === 0) return '';\n    const index = joueurs.findIndex(j => j.pseudo === pseudo);\n    const next = (index + 1) % joueurs.length;\n    return ((_joueurs$next = joueurs[next]) === null || _joueurs$next === void 0 ? void 0 : _joueurs$next.pseudo) || '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83C\\uDCCF Crack List - Partie \", gameCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tu es : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: pseudo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Joueur actif : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: joueurActif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), monTour && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD90\\uFE0F Tes cartes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 10\n        },\n        children: cartes.map((lettre, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePlayCard(lettre),\n          children: lettre\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), !monTour && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u23F3 En attente de ton tour...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"IWgr1KptMVy9cl3IEIeEfNQ1O+8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","db","doc","updateDoc","collection","onSnapshot","setDoc","jsxDEV","_jsxDEV","Game","gameCode","pseudo","_s","joueurs","setJoueurs","cartes","setCartes","joueurActif","setJoueurActif","monTour","setMonTour","unsubJoueurs","snap","list","docs","map","data","unsubGame","length","nouvelleCarte","tirerCarteAleatoire","alphabet","lettre","Math","floor","random","handlePlayCard","getNextPlayer","filter","c","_joueurs$next","index","findIndex","j","next","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","i","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lamtm/Downloads/cracklist-web/src/components/Game.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport {\r\n  doc,\r\n  updateDoc,\r\n  collection,\r\n  onSnapshot,\r\n  setDoc\r\n} from 'firebase/firestore';\r\n\r\nfunction Game({ gameCode, pseudo }) {\r\n  const [joueurs, setJoueurs] = useState([]);\r\n  const [cartes, setCartes] = useState([]);\r\n  const [joueurActif, setJoueurActif] = useState('');\r\n  const [monTour, setMonTour] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!gameCode || !pseudo) return;\r\n\r\n    const unsubJoueurs = onSnapshot(collection(db, 'games', gameCode, 'players'), (snap) => {\r\n      const list = snap.docs.map((doc) => doc.data());\r\n      setJoueurs(list);\r\n    });\r\n\r\n    const unsubGame = onSnapshot(doc(db, 'games', gameCode), (snap) => {\r\n      const data = snap.data();\r\n      if (data) {\r\n        setJoueurActif(data.joueurActif || '');\r\n        setMonTour(data.joueurActif === pseudo);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubJoueurs();\r\n      unsubGame();\r\n    };\r\n  }, [gameCode, pseudo]);\r\n\r\n  useEffect(() => {\r\n    if (cartes.length === 0 && monTour) {\r\n      // Donner 1 carte quand on a plus rien\r\n      const nouvelleCarte = tirerCarteAleatoire();\r\n      setCartes([nouvelleCarte]);\r\n    }\r\n  }, [cartes, monTour]);\r\n\r\n  const tirerCarteAleatoire = () => {\r\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    const lettre = alphabet[Math.floor(Math.random() * alphabet.length)];\r\n    return lettre;\r\n  };\r\n\r\n  const handlePlayCard = async (lettre) => {\r\n    if (!gameCode || !pseudo || !lettre) return;\r\n\r\n    await updateDoc(doc(db, 'games', gameCode), {\r\n      joueurActif: getNextPlayer()\r\n    });\r\n\r\n    setCartes(cartes.filter((c) => c !== lettre));\r\n  };\r\n\r\n  const getNextPlayer = () => {\r\n    if (joueurs.length === 0) return '';\r\n    const index = joueurs.findIndex((j) => j.pseudo === pseudo);\r\n    const next = (index + 1) % joueurs.length;\r\n    return joueurs[next]?.pseudo || '';\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>üÉè Crack List - Partie {gameCode}</h2>\r\n      <p>Tu es : <strong>{pseudo}</strong></p>\r\n      <p>Joueur actif : <strong>{joueurActif}</strong></p>\r\n\r\n      {monTour && (\r\n        <div>\r\n          <h3>üñêÔ∏è Tes cartes</h3>\r\n          <div style={{ display: 'flex', gap: 10 }}>\r\n            {cartes.map((lettre, i) => (\r\n              <button key={i} onClick={() => handlePlayCard(lettre)}>\r\n                {lettre}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!monTour && (\r\n        <p>‚è≥ En attente de ton tour...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}